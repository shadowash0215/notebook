{"config":{"lang":["ja"],"separator":"[\\s\\-\uff0c\u3002]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"Welcome to Shadowash's notebook!","text":"<p>Warning</p> <p>\u6b63\u5728\u5efa\u8bbe\u4e2d\u3002</p> <p>\u8fd9\u662f\u4e00\u4e2a CS \u5c0f\u767d\u642d\u7684\u7b14\u8bb0\u672c\uff0c\u5927\u6982\u4f1a\u7528\u6765\u8bb0\u5f55\u4ed6\u7684\u5b66\u4e60\u3002\u4ed6\u73b0\u5728\u5bf9\u5bc6\u7801\u5b66\u6bd4\u8f83\u611f\u5174\u8da3\uff0c\u6240\u4ee5\u76f8\u5173\u7684\u6570\u5b66\u57fa\u7840\u53ef\u80fd\u66f4\u65b0\u7684\u4e5f\u6bd4\u8f83\u52e4\u5feb\u3002</p>"},{"location":"#todo","title":"Todo","text":"<ul> <li>CSAPP</li> <li>\u62bd\u8c61\u4ee3\u6570</li> <li>\u521d\u7b49\u6570\u8bba</li> <li>RSA</li> </ul> <p>\u60f3\u5230\u7684\u53ea\u6709\u8fd9\u4e48\u591a\uff0c\u4e4b\u540e\u518d\u6162\u6162\u8865\u5427\u3002</p>"},{"location":"ASM/","title":"\u6c47\u7f16\u8bed\u8a00","text":""},{"location":"ASM/#39","title":"3.9","text":"<p>\u4e00\u822c\u6765\u8bf4\uff0c\u4e09\u4e2a push+ \u4e00\u4e2a call \u8868\u793a\u7a0b\u5e8f\u5728\u8c03\u7528 main \u51fd\u6570\uff0c\u5176\u4e4b\u524d\u7684\u4ee3\u7801\u4e3a C \u8bed\u8a00\u7684\u521d\u59cb\u5316\u4ee3\u7801. OD \u4e2d F2 \u4e3a\u8bbe\u7f6e\u65ad\u70b9\uff0c F7 \u4e3a\u8ddf\u8e2a\u8fdb\u5165. \u6570\u636e\u7a97\u4e2d Ctrl+G \u53ef\u4ee5\u8ddf\u8e2a\u53d8\u91cf.  </p> <p>\u6709\u67d0\u4e9b\u5546\u7528\u7684\u5bf9 exe \u8fdb\u884c\u538b\u7f29\u7684\u8f6f\u4ef6\uff0c\u5982 Pecompact\uff0cVmProtect \u53ef\u4ee5\u628a exe \u538b\u7f29\u4e3a exe \uff0c\u538b\u7f29\u4ee5\u540e\u7684 exe \u4e5f\u80fd\u53cc\u51fb\u8fd0\u884c. \u8f6f\u4ef6\u4f5c\u8005\u8c03\u7528\u4ee5\u4e0b\u51fd\u6570 sn sn = rsa(mac\uff0c\u79c1\u94a5) \u8f6f\u4ef6\u68c0\u6d4b sn \u662f\u5426\u6b63\u786e rsa = (sn\uff0c\u516c\u94a5) == mac nop \u6307\u4ee4\u6307\u4ec0\u4e48\u4e5f\u4e0d\u505a\uff0cno operation\uff0c\u673a\u5668\u7801\u4e3a 0x90. alt+backspace \u53ef\u5c06\u6539\u574f\u7684\u6307\u4ee4\u6062\u590d\u539f\u6837. \u641c\u7d22\u65f6\u4f7f\u7528\u8f83\u957f\u7684\u4e32\u4ee5\u83b7\u53d6\u60f3\u8981\u7684\u7ed3\u679c. \u7528\u5341\u516d\u8fdb\u5236\u7f16\u8f91\u5de5\u5177\u5982 010editor \u6216 QuickView \u90fd\u53ef\u4ee5\u5bf9 password.exe \u8fdb\u884c\u641c\u7d22\u5e76\u4fee\u6539. 010editor \u4e2d\u6309 Ctrl+F \u8f93\u5165\u8981\u67e5\u627e\u7684\u4e32(Type \u8981\u6ce8\u610f\u4fee\u6539\u4e3a hex bytes). QV \u6253\u5f00 password.exe\uff0c\u6309\u56de\u8f66\u952e\u53ef\u4ee5\u5728 ascii/hex/asm \u4e09\u79cd\u6a21\u5f0f\u4e2d\u5207\u6362\uff0casm \u6a21\u5f0f\u6709\u4e24\u79cd: 16\u4f4d/32\u4f4d\uff0c\u6309 F2 \u5207\u6362(\u67e5\u770b\u6700\u4e0b\u65b9\u72b6\u6001\u680f\u6216\u5bc4\u5b58\u5668\u5b57\u6bcd\u6570). F7 \u8fdb\u884c\u641c\u7d22\uff0ctab \u952e\u5728 ascii/hex \u95f4\u5207\u6362\uff0c\u5de6\u4e0a\u89d2\u7f16\u8f91\u5185\u6709\u7c98\u8d34. F3 \u53ef\u5c06\u6539\u574f\u7684\u5185\u5bb9\u53d8\u4e3a\u539f\u6837\uff0ctab \u952e\u53ef\u4ece\u5de6\u4fa7\u673a\u5668\u8bed\u8a00\u5207\u6362\u5230\u53f3\u4fa7\u6c47\u7f16\u6307\u4ee4\uff0c\u8f93\u5165\u6c47\u7f16\u8bed\u8a00\u8fdb\u884c\u4fee\u6539\uff0calt+F9 \u4fdd\u5b58\u4fee\u6539\uff0cF1 \u53ef\u83b7\u53d6\u5e2e\u52a9. md5 \u52a0\u5bc6\u7b97\u6cd5(\u4f46\u5df2\u7ecf\u88ab\u8bc1\u660e\u65e0\u6cd5\u9632\u6b62\u78b0\u649e).</p> <pre><code>.data #\u7f16\u8bd1\u6307\u793a\u8bed\u53e5\uff0c\u8868\u793a\u53d8\u91cf\u3001\u6570\u7ec4\u5b9a\u4e49\u4ece\u6b64\u5904\u5f00\u59cb.\u6c47\u7f16\u8bed\u8a00\u4e2d\u5355\u5f15\u53f7\u53ca\u53cc\u5f15\u53f7\u65e0\u533a\u522b\uff0c\u4ed6\u4eec\u65e2\u53ef\u4ee5\u5f15\u4f4f\u5355\u4e2a\u5b57\u7b26\uff0c\u53c8\u53ef\u4ee5\u5f15\u4f4f\u591a\u4e2a\u5b57\u7b26;\n#\u5b57\u7b26\u4e32\u672b\u5c3e\u5e76\u6ca1\u6709\u9690\u542b\u7684'\\0';\u5b9a\u4e49\u6570\u7ec4\u548c\u5b9a\u4e49\u53d8\u91cf\u65e0\u533a\u522b.\nresult db 100 dup(0) #dup:duplicate\n# == char result={0}\nformat db \"%d\"\uff0c0\nprompt db \"The result\"\uff0c0\n\n.code #\u7f16\u8bd1\u6307\u793a\u8bed\u53e5\uff0c\u5e2e\u52a9\u7f16\u8bd1\u5668\u8bc6\u522b\u4ee3\u7801\u4ece\u6b64\u5904\u5f00\u59cb   \nmain:       #\u6807\u53f7\n    mov eax\uff0c0\n    mov ebx\uff0c1\nnext:\n    add eax\uff0cebx #eax = eax + ebx\n    add ebx\uff0c1 \n    cmp ebx\uff0c100 #cmp:compare\n    jbe next #jbe:jump if below or equal\ninvoke wsprintf\uff0coffset result\uff0coffset format\uff0ceax #wsprintf \u548c MessageboxA \u662f Windows \u64cd\u4f5c\u7cfb\u7edf\u4e0b\u7684\u51fd\u6570 offset \u4e3a\u53d6\u5730\u5740.\n# == wsprintf(&amp;result[0]\uff0c&amp;format[0]\uff0ceax); \u5c06 eax \u4e2d\u7684\u5185\u5bb9\u4ee5 char \u7c7b\u578b format \u6570\u7ec4\u7684\u683c\u5f0f\u8f93\u51fa\u5230 char \u7c7b\u578b result \u6570\u7ec4\u4e2d.\n# == wsprintf(result\uff0cformat\uff0ceax) result \u4e2d\u5c06\u5305\u542b\"5050\" \"%d\".\ninvoke MessageBoxA\uff0c0\uff0coffset result\uff0coffset prompt\uff0c0 #\u79f0\u4e3a API (Application Program Interface).\nMessageboxA(0\uff0cformat\uff0cprompt\uff0c0)\n                #\u6b63\u6587 \u6807\u9898\n    ret #return\nend main #\u6307\u5b9a\u7a0b\u5e8f\u7684\u8d77\u59cb\u6267\u884c\u70b9\u5373eip\u7684\u521d\u59cb\u503c\uff0cend \u540e\u9762\u7684\u6807\u53f7\u51b3\u5b9a\u4e86\u7a0b\u5e8f\u521a\u5f00\u59cb\u8fd0\u884c\u65f6eip\u7684\u503c.\n</code></pre> <pre><code>.386 #\u8868\u793a\u4f1a\u7528\u523032\u4f4d\u7684\u5bc4\u5b58\u5668.\ncode segment use16 #\u76f8\u5f53\u4e8e'{'\uff0cuse16\u8868\u793a\u4f7f\u752816\u4f4d\u7684\u5730\u5740.\n\nassume cs:code\nmain:       \n    mov eax\uff0c0\n    mov ebx\uff0c1\nnext:\n    add eax\uff0cebx \n    add ebx\uff0c1 \n    cmp ebx\uff0c100 \n    jbe next \ncode ends #\u76f8\u5f53\u4e8e'}'\nend main\n</code></pre> <p>Win+R \u8f93\u5165 command \u6253\u5f00 DOS \u7ec8\u7aef\uff0c\u8fdb\u5165 D \u76d8\u4e2d\u7684 MASM \u76ee\u5f55\u4e2d\uff0cmasm name.asm \u751f\u6210 name.obj\uff0clink name.obj \u751f\u6210 name.exe. \u4f7f\u7528 td name.exe \u8fdb\u884c debug\uff0c\u6309 Ctrl+R/\u5728\u5bc4\u5b58\u5668\u754c\u9762\u5355\u51fb\u53f3\u952e\u5207\u636232\u4f4d/16\u4f4d\u7684\u5bc4\u5b58\u5668. cli \u662f\u4e00\u6761\u7279\u6743\u6307\u4ee4\uff0c\u542b\u4e49\u4e3a clear interrup\uff0c\u8868\u793a\u7981\u6b62\u786c\u4ef6\u4e2d\u65ad. Windows\u7684\u7528\u6237\u7a0b\u5e8f\u662f\u4e0d\u5141\u8bb8\u6267\u884c\u8be5\u6761\u6307\u4ee4\u7684.  </p> <pre><code>#\u8f93\u5165\u548c\u8f93\u51fa\uff0c\u5e76\u5224\u65ad\u662f\u5426\u4e3a\u5927\u5199\u5b57\u6bcd(getchar&amp;putchar)\n.386\ncode segment use16\nassume cs:code\nmain:\n    mov ah\uff0c 1\n    int 21h #AL = getchar()\uff0cint 21h \u662f\u4e00\u4e2a\u4e2d\u65ad\u96c6\uff0cint:interrupt\uff0c\u6307\u8f6f\u4ef6\u4e2d\u65ad\uff0cah = 1 \u8868\u793a\u8c03\u7528\u8be5\u4e2d\u65ad\u96c6\u4e2d\u76841\u53f7\u5b50\u4e2d\u65ad.\n    cmp al\uff0c 'A'\n    jb not_upper #jb:jump if below\n    cmp al\uff0c 'Z'\n    ja not_upper #ja:jump if above\nis_upper:\n    mov ah\uff0c 2\n    mov dl\uff0c 'U'\n    int 21h #putchar(DL)\n    jmp exit\nnot_upper:\n    mov ah\uff0c 2\n    mov dl\uff0c 'O'\n    int 21h\nexit:\n    move ah\uff0c 4Ch\n    move al\uff0c 0\n    int 21h #exit(0)\ncode ends\nend main\n</code></pre>"},{"location":"ASM/#316","title":"3.16","text":"<pre><code>data segment\na db \"ABC\"\ns db \"Hello$World!\"\uff0c 0Dh\uff0c 0Ah \uff0c0 #\u51fd\u6570\u7ecf\u8fc7\u7f16\u8bd1\u540e\u53d8\u4e3a\u5176\u9996\u5730\u5740\uff0c\u6570\u7ec4\u7ecf\u8fc7\u7f16\u8bd1\u540e\u4e5f\u53d8\u4e3a\u5176\u9996\u5730\u5740.\u4e3a\u9632\u6b62\u4e0e\u5bc4\u5b58\u5668\u6df7\u6dc6\uff0c\u5b57\u6bcd\u5f00\u5934\u7684\u5341\u516d\u8fdb\u5236\u6570\u524d\u9700\u8981\u52a0\u4e0a0.\n#                                offset s \u79f0\u4e3a s \u7684\u504f\u79fb\u5730\u5740 = \u5176\u79bb data \u6bb5\u9996\u7684\u8ddd\u79bb = 3 \n#                   \u56de\u8f66 \u6362\u884c     windows \u4e2d\u6362\u5230\u4e0b\u4e00\u884c\u884c\u9996\u9700\u8981\u56de\u8f66\u548c\u6362\u884c\u4e24\u4e2a\u64cd.\n#                   \"\\r\"\"\\n\"     \u56de\u8f66:\u5149\u6807\u56de\u5230\u884c\u9996;\u6362\u884c:\u5149\u6807\u79fb\u52a8\u5230\u4e0b\u4e00\u884c\u540c\u4e00\u5217.\ndata ends\n\ncode segment \nassume cs:code\uff0cds:data\nmain:\n    mov ax\uff0cseg s # \u6216mov ax\uff0cdata;seg s:\u53d6\u6570\u7ec4 s \u7684\u6bb5\u5730\u5740.\u7f16\u8bd1\u65f6\u4f1a\u5c06 seg s \u7f16\u8bd1\u4e3a delta = (seg s - \u9996\u6bb5\u6bb5\u5730\u5740)\uff0c\u6b64\u5904\u4e3a0\uff0c\uff0c\u7f16\u8bd1\u540e\u5373 mov ax\uff0c0.  \n                 # \u8fd0\u884c\u65f6\u64cd\u4f5c\u7cfb\u7edf\u5373 dos \u4f1a\u5bf9 delta \u8fdb\u884c\u4fee\u6b63: delta += \u9996\u6bb5\u7684\u5b9e\u9645\u6bb5\u5730\u5740\uff0c\u6b64\u8fc7\u7a0b\u88ab\u79f0\u4e3a\u91cd\u5b9a\u4f4d(relocating).\n                 # mov ax\uff0cseg s \u7f16\u8bd1\u540e\u7684\u673a\u5668\u8bed\u8a00\u4e3a B8 00 00\uff0c\u5047\u5b9a\u7a0b\u5e8f\u7684\u9996\u6bb5\u5730\u5740\u4e3a 1000h\uff0c\u5219\u7a0b\u5e8f\u8fd0\u884c\u65f6\u673a\u5668\u8bed\u8a00\u53d8\u4e3a B8 00 10.\n                 # \u673a\u5668\u80fd\u77e5\u9053\u6b64\u5904\u9700\u8981\u4fee\u6b63\u662f\u56e0\u4e3a\u7f16\u8bd1\u65f6\u751f\u6210\u4e86\u91cd\u5b9a\u5411\u8868\uff0c\u5bf9\u9700\u8981\u91cd\u5b9a\u5411\u7684\u4f4d\u7f6e\u8fdb\u884c\u4e86\u6807\u8bb0\uff0c\u6b64\u6807\u8bb0\u88ab\u5199\u5728\u6587\u4ef6\u5934\u4e2d.                \n    mov ds\uff0cax # ds:\u6570\u636e\u6bb5\u5bc4\u5b58\u5668\uff0c\u53ea\u7528\u6765\u5b58\u50a8\u6807\u53f7\u6216\u53d8\u91cf\u7684\u6bb5\u5730\u5740\uff0c\u4e0d\u80fd\u63a5\u53d7\u5e38\u6570\u8d4b\u503c\uff0c\u53ea\u63a5\u53d7\u53e6\u4e00\u4e2a\u5bc4\u5b58\u5668/\u53d8\u91cf\u8d4b\u503c\uff0c\u53e6\u5916\u8fd8\u6709 cs\uff0css\uff0ces \u8fd9\u4e09\u4e2a\u6bb5\u5bc4\u5b58\u5668.\n    mov bx\uff0c0\nnext:            # s[i] = *(s+i)\n    mov dl\uff0cs[bx] # \u7f16\u8bd1\u540e\u53d8\u6210 mov dl\uff0cds:[bx + 3];ds \u6307\u8be5\u6570\u7ec4\u5143\u7d20\u7684\u6bb5\u5730\u5740(segment address)\uff0c\u8be5\u6570\u7ec4\u5143\u7d20\u7684\u504f\u79fb\u5730\u5740\u4e3a 3\uff0c\u8be5\u5143\u7d20\u7684\u5b8c\u6574\u5730\u5740\u4e3a ds:bx + 3\n    cmp dl\uff0c0\n    je exit # je:jump if equal\n    move ah\uff0c2\n    int 21h\n    add bx\uff0c1\n    jmp next\nexit:         # cs = seg exit = code \u7684\u6bb5\u5730\u5740.\n    mov ah\uff0c4Ch\n    int 21h\ncode ends\nend main\n</code></pre> <p>\u540c\u4e00\u4e2a\u6bb5\u5185\u6bcf\u4e00\u4e2a\u53d8\u91cf\u7684\u6bb5\u5730\u5740\u90fd\u662f\u4e00\u6837\u7684\uff0c\u4e3a\u6bb5\u9996\u5730\u5740\u53d6\u524d\u56db\u4f4d\uff0c\u4e2a\u4f4d\u5fc5\u987b\u4e3a0\uff0c\u504f\u79fb\u5730\u5740\u7684\u53d8\u5316\u8303\u56f4\u4e3a 0000h:FFFFh.\u6bb5\u7684\u6700\u5927\u957f\u5ea6\u4e3a 10000h \u5b57\u8282\u5373 64k;\u6bb5\u548c\u6bb5\u53ef\u4ee5\u91cd\u53e0. |\u7269\u7406\u5730\u5740|\u76f8\u5bf9\u5730\u5740| |:----:|:----:| |12340h|00h| |12341h|01h| |\u2026\u2026\u2026\u2026|\u2026\u2026\u2026\u2026| |12350h|33h| |\u2026\u2026\u2026\u2026|\u2026\u2026\u2026\u2026| |12398h|33h| |\u2026\u2026\u2026\u2026|\u2026\u2026\u2026\u2026| |12398h|55h| |\u2026\u2026\u2026\u2026|\u2026\u2026\u2026\u2026| |2233Fh|77h| |\u2026\u2026\u2026\u2026|\u2026\u2026\u2026\u2026| |2234Fh|99h|</p> <p>16 \u4f4d\u7684 CPU \u6307\u5176\u6240\u6709\u5bc4\u5b58\u5668\u90fd\u662f 16 \u4f4d\u7684\u5bbd\u5ea6;ax\uff0cbx\uff0ccx\uff0cdx\uff0csi\uff0cdi\uff0cbp\uff0csp\uff0ccs\uff0cds\uff0ces\uff0css\uff0cip\uff0cFL. bx\uff0cbp\uff0csi\uff0cdi \u8868\u793a\u504f\u79fb\u5730\u5740\uff0ccs \u7ba1\u7406 code \u6bb5\uff0cds \u7ba1\u7406 data \u6bb5\uff0c\u4e24\u8005\u5fc5\u987b\u88ab\u8d4b\u503c. \u6807\u53f7\u6700\u7ec8\u4f1a\u8f6c\u5316\u4e3a\u5176\u504f\u79fb\u5730\u5740. ip \u662f \u6307\u4ee4\u6307\u9488(instruction pointer)\uff0c\u7528\u6765\u4fdd\u5b58\u5c06\u8981\u6267\u884c\u7684\u6307\u4ee4\u7684\u504f\u79fb\u5730\u5740\uff0c\u800c cs \u5219\u662f\u7528\u6765\u4fdd\u5b58\u5c06\u8981\u6267\u884c\u7684\u6307\u4ee4\u7684\u6bb5\u5730\u5740\uff0c\u4e8e\u662f cs:ip \u7528\u6765\u6307\u5411\u8981\u6267\u884c\u7684\u90a3\u6761\u6307\u4ee4. FL \u662f\u6807\u5fd7(flag)\u5bc4\u5b58\u5668\uff0c\u5b83\u91cc\u9762\u768416\u4e2a\u4f4d\u5206\u522b\u4ee3\u8868\u4e0d\u540c\u7684\u610f\u4e49\uff0c\u5176\u4e2d\u6709\u4e9b bit \u8868\u793a\u6307\u4ee4\u6267\u884c\u4ee5\u540e\u7684\u72b6\u6001\uff0c\u6709\u4e9b\u5219\u53ef\u4ee5\u63a7\u5236 CPU \u7684\u884c\u4e3a. \u5982 FL \u7684\u7b2c0\u4f4d\u79f0\u4e3a CF \u4f4d\uff0c\u5176\u7528\u6765\u5b58\u50a8\u5f53\u524d\u6307\u4ee4\u7684\u8fdb\u4f4d. <pre><code>    mov ax\uff0c0FFFFh\nadd ax\uff0c1 ; AX = 0 \uff0c CF = 1\njnc no_carry_flag ;jnc:jump if not carry flag\njc has_carry_flag ;jc:jump if carry flag\nhas_carry_flag:\n</code></pre></p> <p>date \u6bb5\u548c code \u6bb5\u662f\u8fde\u7eed\u7684. <code>ds:[20] = cs:[0]</code> 16\u4f4d\u7684 CPU \u8fd0\u884c\u5728\u5b9e\u6a21\u5f0f(real mode)\u4e0b\uff0c\u7528\u6237\u4ee3\u7801\u62e5\u6709\u548c\u64cd\u4f5c\u7cfb\u7edf\u4e00\u6837\u7684\u6743\u9650\uff0c\u53ef\u4ee5\u6267\u884c\u4efb\u4f55\u6307\u4ee4\uff0c\u53ef\u4ee5\u8bbf\u95ee\u4efb\u4f55\u5185\u5b58.32\u4f4d\u7684 CPU \u9664\u4e86\u53ef\u4ee5\u7ee7\u7eed\u8fd0\u884c\u5728\u5b9e\u6a21\u5f0f\u4e0b\u5916\uff0c\u8fd8\u53ef\u4ee5\u8fd0\u884c\u5728\u4fdd\u62a4\u6a21\u5f0f(protected mode)\u4e0b.\u5728\u4fdd\u62a4\u6a21\u5f0f\u4e0b\uff0c\u7528\u6237\u4ee3\u7801\u7684\u6743\u9650\u4f4e\u4e8e\u64cd\u4f5c\u7cfb\u7edf\u7684\u6743\u9650\uff0c\u5e76\u4e0d\u80fd\u6267\u884c\u4efb\u4f55\u6307\u4ee4\uff0c\u4e0d\u80fd\u8d8a\u6743\u8bbf\u95ee\u64cd\u4f5c\u7cfb\u7edf\u53ca\u5176\u4ed6\u8fdb\u7a0b\u5360\u7528\u7684\u5185\u5b58\u7a7a\u95f4. 32\u4f4d\u7684 CPU \u4e2d\uff0ccs\uff0cds\uff0ces\uff0css \u4ecd\u65e7\u4e3a16\u4f4d\u7684\u5bbd\u5ea6\uff0c\u5176\u4ed6\u5185\u5b58\u5668\u90fd\u53d8\u6210\u4e8632\u4f4d\uff0c\u5982 eax\uff0cebx\uff0cecx\uff0cedx\uff0cesi\uff0cedi\uff0cesp\uff0cebp\uff0ceip\uff0cEFL. 32\u4f4d\u7684 CPU \u6700\u591a\u53ef\u4ee5\u8bbf\u95ee 4G (\\(2^{32}\\))\u5b57\u8282\u5185\u5b58\u7a7a\u95f4. \u5b9e\u6a21\u5f0f\u548c\u4fdd\u62a4\u6a21\u5f0f\u4e0b\u7684\u6bb5\u610f\u4e49\u4e0d\u540c\uff0c\u4f8b\u5982\u5f53 ds = 8\uff0cesi  = 45678h \u65f6\uff0c\u6c42 ds:esi \u7684\u7269\u7406\u5730\u5740. gdt \u79f0\u4e3a\u5168\u5c40\u63cf\u8ff0\u7b26\u8868(global descriptor table)\u662f\u4e00\u4e2a\u6570\u7ec4\uff0c\u6570\u7ec4\u7684\u6bcf\u4e2a\u5143\u7d20\u90fd\u662f8\u4e2a\u5b57\u8282. \u6709\u4e00\u4e2a\u5bc4\u5b58\u5668\u53eb gdtr \u4f1a\u88ab\u8d4b\u503c\u4e3a gdt \u8868\u7684\u9996\u5730\u5740. <pre><code>\u8bbe gdt \u8868\u7684\u9996\u5730\u5740\u4e3a t:\nt + 0 -&gt; gdt[0]\nt + 8 -&gt; gdt[1]\nt + 10h -&gt; gdt[2]\nt + 18h -&gt; gdt[3]\n</code></pre> \u628a ds \u548c t \u76f8\u52a0\u6307\u5411 gdt[1]\uff0c\u5047\u5b9a gdt[1] \u76848\u5b57\u8282\u5982\u4e0b\u6240\u793a: <pre><code>00  01  02  03  04  05  06  07 -&gt;\u4e0b\u6807  \nFF, FF, 00, 00, 10, 93, 0F, 00 -&gt;\u503c  \n</code></pre> \u6bb5\u9996\u5730\u5740\u53d6\u7b2c2\uff0c3\uff0c4\uff0c7\u5b57\u8282\uff0c\u6b64\u5904\u4e3a00100000h\uff0c\u4e8e\u662f ds:45678h\u5bf9\u5e94\u7684\u7269\u7406\u5730\u5740\u4e3a: 00100000h + 45678h = 00145678h. \u7b2c0\uff0c1\u5b57\u8282\u4ee5\u53ca\u7b2c6\u5b57\u8282\u7684\u4f4e\u4f4d\u7528\u6765\u5b9a\u4e49\u6bb5\u5185\u7684\u6700\u5927\u504f\u79fb\u5730\u5740\uff0c\u6b64\u5904\u4e3a FFFFFh;\u7b2c6\u5b57\u8282\u7684\u9ad8\u4f4d\u8868. \u7b2c5\u5b57\u8282 93h \u7528\u6765\u89c4\u5b9a\u8fd9\u662f\u4e00\u4e2a\u6570\u636e\u6bb5\uff0c\u4e14\u53ef\u8bfb\u53ef\u5199\uff0c\u89c4\u5b9a\u8be5\u6bb5\u7684\u8bbf\u95ee\u6743\u9650\u662f ring 0. 93h = 1 00 1 0011\uff0c\u6743\u9650\u7531\u659c\u4f53\u90e8\u5206\u51b3\u5b9a.</p>"},{"location":"ASM/#323","title":"3.23","text":"<p>db, dw, dd, dq, dt 08, 16, 32, 64, 80 - db: char\uff0cb: byte; - dw: short int\uff0cw: word; - dd: long int or float\uff0cdouble words; - dq: __int64 or long long or double\uff0cq: quadruple words; - dt: long double\uff0c\"%Lf\".   </p> <p>IEEE754 \u6807\u51c6\u4e2d\u5355\u7cbe\u5ea6\u5c0f\u6570(\u5373 float \u7c7b\u578b\u7684\u8868\u793a): 0 1000010 1 1111110 11000000 00000000 1\u4f4d\u7b26\u53f7\u4f4d\uff0c8\u4f4d\u6307\u6570\u4f4d\uff0c23\u4f4d\u5c3e\u6570.\u504f\u7f6e\u6307\u6570:a = (8\u4f4d\u65e0\u7b26\u53f7\u6570-127)\uff0c\u6700\u7ec8 *2^a\uff0c\u5728\u4e8c\u8fdb\u5236\u4e0a\u8868\u73b0\u4e3a\u5c3e\u6570\u5c0f\u6570\u70b9\u7684\u79fb\u52a8. \u9996\u5148\u8865\u4e00\u4e2a1\u548c\u5c0f\u6570\u70b9.1.11111101100000000000000-&gt;1111111.01100000000000000  </p> <p>\u7b97\u672f\u8fd0\u7b97: add\uff0csub \u52a0\u51cf;mul\uff0cdiv \u65e0\u7b26\u53f7\u6570\u4e58\u9664;imul\uff0cidiv \u6709\u7b26\u53f7\u6570\u4e58\u9664 <pre><code>mov ax\uff0c0FFFFh\nmov bx\uff0c0FFFFh\nmul bx # dx:ax = ax * bx = 0FFFF 0001h = 4294836225\uff0c\u5176\u4e2d dx = 0FFFFh\uff0cax = 0001h\uff0c\u8fd9\u91cc\u7684\u5192\u53f7\u8868\u793a\u9ad816\u4f4d\u548c\u4f4e16\u4f4d\u7684\u62fc\u63a5.16\u4f4d\u6570\u7684\u4e58\u6cd5\u9ed8\u8ba4\u88ab\u4e58\u6570\u4e3aax\uff0c\u4e14\u5b58\u653e\u4f4d\u7f6e\u9ed8\u8ba4\u4e3a dx:ax.\n\nmov ax\uff0c0FFFFh\nmov bx\uff0c0FFFFh\nimul bx # dx:ax = ax*bx = 0000 0001h\n</code></pre> \u6c47\u7f16\u8bed\u8a00\u7684\u53d8\u91cf\u5b9a\u4e49\u4e0d\u533a\u5206\u7b26\u53f7\u6570\u548c\u65e0\u7b26\u53f7\u6570. \u903b\u8f91\u8fd0\u7b97:and(&amp;)\uff0cor(|)\uff0cxor(^)\uff0cnot(~)\uff0cshl(&lt;&lt;)\uff0cshr(&gt;&gt;)\uff0c rol(_rotl())\uff0cror(_rotr())   shl:shift left; shr:shift right; rol:rotate left; ror:rotate right <pre><code>mov ah\uff0c10110110B # rol\u524d 1011 0110\nrol ah\uff0c1         # rol\u540e 0110 1101\uff0cCF = 1\n</code></pre></p> <pre><code>.386 # \u63a5\u4e0b\u6765\u8981\u7528\u523032\u4f4d\u5bc4\u5b58\u5668\uff0c\u4e14\u504f\u79fb\u5730\u5740\u9ed8\u8ba4\u4e3a32\u4f4d.\ndata segment use16\na dd 56789ABCh\ndata ends\ncode segment use16\nassume cs:code ds:data\nmain:\n    mov ax\uff0cdata # mov ax\uff0cseg a\n    mov ds\uff0cax   # \u4fdd\u8bc1 ds \u6307\u5411 data \u6bb5.\n    mov eax\uff0ca   # \u56e0\u4e3a a \u9700\u8981\u7528\u5230\u6bb5\u5730\u5740.\n    mov cx\uff0c8\nagain:\n    rol eax\uff0c4 # eax = 6789ABC5h\n    mov edx\uff0ceax\n    and edx\uff0c0Fh # edx = 5\n    cmp edx\uff0c10\n    jae is_alpha\n    add dl\uff0c'0'\n    jmp out_put\nis_alpha:\n    sub dl\uff0c10\n    add dl\uff0c'A'\noutput:\n    push eax\n    mov ah\uff0c2\n    int 21h\n    pop eax\n    dec cx # dec:\u81ea\u51cf;inc:\u81ea\u589e\ncode ends\nend main\n</code></pre>"},{"location":"ASM/#330","title":"3.30","text":"<p>1.\u76f4\u63a5\u5bfb\u5740  </p> <p>2.\u95f4\u63a5\u5bfb\u5740(\u7528\u5bc4\u5b58\u5668\uff0c\u5bc4\u5b58\u5668 + \u5e38\u6570\u6765\u8868\u793a\u53d8\u91cf\u7684\u504f\u79fb\u5730\u5740) cs\uff0cds\uff0ces\uff0css \u7528\u6765\u8868\u793a\u6bb5\u5730\u5740;sp\uff0cbp\uff0csi\uff0cdi \u7528\u6765\u8868\u793a\u504f\u79fb\u5730\u5740. sp \u548c ss \u7ed3\u5408\u5728\u4e00\u8d77\u6784\u6210 ss:sp \u6307\u5411\u5806\u6808\u7684\u9876\u7aef. \u5bc4\u5b58\u5668\u76f8\u52a0\u65f6\u53ea\u80fd\u4ee5 b \u5f00\u5934\u548c i \u7ed3\u5c3e\u7684\u5bc4\u5b58\u5668\u76f8\u52a0. a. [bx]\uff0c[bp]\uff0c[si]\uff0c[di]; b. [ax+2]\uff0c[bp-1]\uff0c[si+3]\uff0c[di-4]; c. [bx+si];[bx+di]\uff0c[bp+si]\uff0c[bp+di]; d. [bx+si+2]\uff0c[bx+di-2]\uff0c[bp+si+6]\uff0c[bp+di-6].  </p> <p>\u6c47\u7f16\u8bed\u8a00\u7684\u591a\u6570\u6307\u4ee4\u8981\u6c42\u4e24\u4e2a\u64cd\u4f5c\u6570\u7b49\u5bbd\uff0c\u53ea\u8981\u6709\u4e00\u65b9\u7684\u5bbd\u5ea6\u5df2\u77e5\uff0c\u53e6\u4e00\u65b9\u7684\u5bbd\u5ea6\u5fc5\u987b\u4e0e\u5176\u4e00\u81f4.\u82e5\u4e24\u8005\u5747\u4e0d\u660e\u786e\uff0c\u5219\u9700\u7ed9\u4e00\u65b9\u52a0\u4e0a\u5bbd\u5ea6\u7684\u9650\u5236.\u5e38\u6570\u5728\u6c47\u7f16\u8bed\u8a00\u4e2d\u6ca1\u6709\u660e\u786e\u7684\u5bbd\u5ea6.\u5982: <pre><code>mov ds:[di]\uff0c0 #\u4e24\u8005\u5bbd\u5ea6\u5747\u4e0d\u660e\u786e\uff0c\u7f16\u8bd1\u4f1a\u62a5\u9519.\n\u6b63\u786e\u7684\u5199\u6cd5\u4e3a:\nmov byte ptr ds:[di]\uff0c0\n\u7ffb\u8bd1\u4e3a C \u8bed\u8a00:\n*(char *)(ds:di) = 0; #ptr \u662f pointer \u7684\u7f29\u5199.\nmov word ptr ds:[di]\uff0c0\n\u7ffb\u8bd1\u4e3a C \u8bed\u8a00:\n*(short int *)(ds:di) = 0\nmov dword ptr ds:[di]\uff0c0\n\u7ffb\u8bd1\u4e3a C \u8bed\u8a00:\n*(long int *)(ds:di) = 0\n\u6216:\nmov al\uff0c0\nmov ds:[di]\uff0cal\n</code></pre> \u6ce8\u610f\u5bbd\u5ea6\u4fee\u9970\u4e0d\u80fd\u7528\u4e8e\u5e38\u6570\uff0c\u53ea\u80fd\u4f5c\u7528\u4e8e\u53d8\u91cf.  </p> <p>\u5728\u7a0b\u5e8f\u4e2d\u5f15\u7528\u67d0\u4e2a\u53d8\u91cf\u65f6\uff0c \u8be5\u53d8\u91cf\u7684\u6bb5\u5730\u5740\u5fc5\u987b\u7528\u6bb5\u5bc4\u5b58\u5668\u8868\u793a\uff0c \u4e0d\u80fd\u7528\u5e38\u6570\u8868\u793a; \u504f\u79fb\u5730\u5740\u65e2\u53ef\u4ee5\u7528\u76f4\u63a5\u5bfb\u5740\u5373\u5e38\u6570\uff0c \u53c8\u53ef\u4ee5\u7528\u95f4\u63a5\u5bfb\u5740\u5373[]\u4e2d\u542b\u6709\u5bc4\u5b58\u5668\u8868\u793a. <pre><code>struct st\n{\n    char name[8];\n    short int score;\n}a[10];\n# \u5047\u5b9a ds = seg a\uff0c bx = offset a. \u73b0\u5728\u8981\u5c06 a[2].score \u8d4b\u503c\u7ed9 ax.\nmov si\uff0c20\nmov ax\uff0cds:[bx+si+8] # ax = a[2].score\n# bx \u662f\u6570\u7ec4\u9996\u5143\u7d20\u7684\u5730\u5740\uff0c si \u662f a[0] \u5230 a[2] \u7684\u8ddd\u79bb\uff0c 8\u662f name \u6570\u7ec4\u7684\u957f\u5ea6.\n</code></pre> \u5728\u539f\u7a0b\u5e8f\u4e2d\u5f15\u7528\u53d8\u91cf: <pre><code>data segment\nabc db 1\uff0c2\uff0c3\uff0c4\nxyz dw 789Ah\uff0c0BCDEh\uff0c9876h\nasd dd 12345678h\uff0c56789ABCh\ndata ends\n\ncode segment \nassume cs:code\uff0cds:data\nmain:\n    mov ax\uff0cdata\n    mov ds\uff0cax\n    # \u5f62\u5f0f 1\n    mov ah\uff0cabc[1] \n    mov ah\uff0c[abc+1]\n    # \u5f62\u5f0f 2\n    mov bx\uff0coffset abc \n    mov ah\uff0c[bx+1] \n    # \u5f62\u5f0f 3\n    mov bx\uff0c1\n    mov ah\uff0cabc[bx]\n    mov ah\uff0c[abc+bx]\n    # \u5f62\u5f0f 4\n    mov bx\uff0coffset abc\n    mov si\uff0c1\n    mov ah\uff0c[bx+si]\n\ncode ends\nend main\n</code></pre> assume \u7684\u4f5c\u7528\u5c31\u662f\u544a\u8bc9\u7f16\u8bd1\u5668\u5728\u5f15\u7528\u67d0\u4e2a\u53d8\u91cf\u6216\u6807\u53f7\u7684\u6bb5\u5730\u5740\u66ff\u6362\u6210\u5bf9\u5e94\u7684\u6bb5\u5bc4\u5b58\u5668\uff0c \u4f46\u4ed6\u5e76\u4e0d\u4f1a\u5bf9\u6bb5\u5bc4\u5b58\u5668\u8fdb\u884c\u8d4b\u503c. assume cs:code\uff0cds:data \u662f\u7f16\u8bd1\u6307\u793a\u8bed\u53e5(directive)\uff0c\u7f16\u8bd1\u540e\u4e0d\u4f1a\u4ea7\u751f\u673a\u5668\u7801\uff0c\u4f46\u4f1a\u6d88\u5931. <pre><code>data segment\na db 'a'\nend datas\n\ncode1 segment\nassume cs:code1\uff0cds:data\nmain:\n    je far_away\nnext:\n    mov dl\uff0c[a]\n    mov al\uff0c2\n    int 21h\ncode1 ends\n    je next\ncode2 segment\nassume cs:code2\n    je next\ncode2 ends\nend main\n</code></pre> \u6bb5\u5bc4\u5b58\u5668\u4f18\u5148\u7ea7: ds&gt;ss&gt;es&gt;cs. \u5f53\u540c\u4e00\u4e2a\u6bb5\u540d\u548c\u591a\u4e2a\u6bb5\u5bc4\u5b58\u5668\u5efa\u7acb\u4e86\u5173\u8054\u65f6\uff0c\u9075\u5faa\u5982\u4e0a\u7684\u4f18\u5148\u7ea7\u987a\u5e8f.  </p> <p>Bochs \u865a\u62df\u673a\u53ca\u5176\u5185\u7f6e\u8c03\u8bd5\u5668 Soft-ICE \u4ecb\u7ecd: Bochs \u4e0b\u8f7d\u89e3\u538b\u7f29\u540e\uff0cbochs\\bochsdbg.exe \u53cc\u51fb -&gt; Load -&gt; dos.bxrc -&gt; Start -&gt; Continue (\u89e3\u91ca\u6267\u884c) \u5e38\u89c4\u7684\u65ad\u70b9\u5373\u8f6f\u4ef6\u65ad\u70b9(software breakpoint)\u4f1a\u628a\u8bbe\u4e86\u65ad\u70b9\u7684\u6307\u4ee4\u7684\u9996\u5b57\u8282\u6539\u6210 0CCh \u8fd9\u4e2a\u673a\u5668\u7801\uff0c\u8be5\u673a\u5668\u7801\u5bf9\u5e94\u7684\u6307\u4ee4\u662f int 3.\u5f53\u8c03\u8bd5\u5668\u6267\u884c\u5230 int 3 \u65f6\u4f1a\u81ea\u52a8\u65ad\u4f4f\uff0c\u5373 int 3 \u76f8\u5f53\u4e8e\u4e00\u4e2a\u65ad\u70b9. TD \u53ea\u652f\u6301\u8f6f\u4ef6\u65ad\u70b9\uff0c\u4e0d\u652f\u6301\u786c\u4ef6\u65ad\u70b9.Soft-ICE \u65e2\u652f\u6301\u8f6f\u4ef6\u65ad\u70b9\uff0c\u53c8\u652f\u6301\u786c\u4ef6\u65ad\u70b9(hardware breakpoint).\u5176\u4e2d\u786c\u4ef6\u65ad\u70b9\u6709 3 \u79cd\u7c7b\u578b: bpmb \u5730\u5740 r:\u5f53\u5730\u5740\u5904\u7684\u53d8\u91cf\u503c\u88ab\u8bfb\u53d6\u65f6\u65ad\u4f4f; bpmb \u5730\u5740 w:\u5f53\u5730\u5740\u5904\u7684\u53d8\u91cf\u503c\u88ab\u5199\u5165\u65f6\u65ad\u4f4f; bpmb \u5730\u5740 x:\u5f53\u5730\u5740\u5904\u7684\u6307\u4ee4\u88ab\u6267\u884c\u65f6\u65ad\u4f4f. 80386 \u4ee5\u4e0a\u7684 CPU \u5728\u786c\u4ef6\u4e0a\u652f\u6301\u786c\u4ef6\u65ad\u70b9\u529f\u80fd\uff0c\u5f53\u8c03\u8bd5\u5668\u8bbe\u7f6e\u786c\u4ef6\u65ad\u70b9\uff0c\u5b83\u4f1a\u628a\u65ad\u70b9\u5730\u5740\u4fdd\u5b58\u5230\u5bc4\u5b58\u5668 dr0\uff0cdr1\uff0cdr2\uff0cdr3\u4e2d\uff0c\u518d\u628a\u65ad\u70b9\u7684\u6761\u4ef6\u4fdd\u5b58\u5230 dr6 \u53ca dr7 \u4e2d.\u786c\u4ef6\u65ad\u70b9\u7684\u4e2a\u6570\u6700\u591a 4 \u4e2a.\u786c\u4ef6\u65ad\u70b9\u4e0d\u4f1a\u4fee\u6539\u53d8\u91cf\u6216\u6307\u4ee4\u7684\u5185\u5bb9.  <pre><code># \u68c0\u6d4b\u8bbe\u7f6e\u8f6f\u4ef6\u65ad\u70b9\u4f1a\u5c06\u6307\u4ee4\u9996\u5b57\u8282\u6539\u4e3a 0CCh.\ncode segment \nassume cs:code\nmain:\n    cx\uff0c10\nnext:\n    mov ah\uff0c2 # \u6b64\u5904\u8bbe\u4e00\u4e2a\u8f6f\u4ef6\u65ad\u70b9\n    mov dl\uff0c'A'\n    int 21h\n    mov al\uff0cbyte ptr [next] # \u7f16\u8bd1\u65f6\u4f1a\u8f6c\u4e3a mov al\uff0cbyte ptr code:[next]\uff0c\n                           # \u518d\u6839\u636e assume \u8f6c\u4e3a mov al\uff0cbyte ptr cs:[next]\n    cmp al\uff0c0CCh\n    je done\n    sub cx\uff0c1\n    cmp cx\uff0c0\n    jnz next\ndone:\n    mov al\uff0c4Ch\n    int 21h\ncode ends\nend main\n</code></pre></p>"},{"location":"ASM/#46","title":"4.6","text":"<p>\u7528 winimage \u6253\u5f00 dos.img \u8fd9\u4e2a\u786c\u76d8\u955c\u50cf\u53ef\u4ee5\u5b9e\u73b0\u865a\u62df\u673a\u5185\u5916\u6587\u4ef6\u7684\u4ea4\u6362. \u627e\u5230 bochs\\dos.img \u53cc\u51fb  bochs\\bochsdbg.exe \u53cc\u51fb\u542f\u52a8 bochs Load -&gt; dos.bxrc -&gt; Start</p> <p>\u590d\u5236 addr.c \u5230 bochs\\tc \u4e2d; cd\\tc tc: \u6309 Alt + F \u9009\u62e9\u83dc\u5355 file -&gt; load -&gt; addr.c \u6309 Alt + C \u9009\u62e9\u83dc\u5355 compile -&gt; build all \u6309 Alt + F \u9009\u62e9\u83dc\u5355 file -&gt; quit td addr \u7528\u6c47\u7f16\u8bed\u8a00\u63a7\u5236\u6587\u672c\u65b9\u5f0f\u4e0b\u6574\u4e2a\u5c4f\u5e55\u7684\u8f93\u51fa\uff1a (x,y) \u5750\u6807\u5bf9\u5e94\u7684\u663e\u5361\u504f\u79fb\u5730\u5740 = (y * 80 + x) * 2\uff0c\u663e\u5361\u6bb5\u5730\u5740\u56fa\u5b9a\u4e3a 0B800h. <pre><code>0000:0000 ~ 0000:FFFF\n1000:0000 ~ 1000:FFFF\n\u2026\u2026\n9000:0000 ~ 9000:FFFF # dos \u53ca\u7528\u6237\u7a0b\u5e8f\u5360\u7528\u8fd9\u5757\u5185\u5b58\uff0c\u957f\u5ea6\u4e3a 640 KB\n\nA000:0000 ~ A000:FFFF\nB000:0000 ~ B000:7FFF\nB800:0000 ~ B800:7FFF # \u6620\u5c04\u5230\u663e\u5361\u5185\u5b58\n\nC000:0000 ~ C000:FFFF\n\u2026\u2026\nF000:0000 ~ F000:FFFF # \u6620\u5c04\u5230 ROM(Read-Only-Memory)\n</code></pre> \u6620\u5c04\u662f\u5728\u7535\u8111\u542f\u52a8\u65f6\u6267\u884c ROM \u4e2d POST \u4ee3\u7801\u8fc7\u7a0b\u4e2d\u5b8c\u6210\u7684; ROM \u4e2d\u8fd8\u5305\u62ec\u4e86 BIOS \u4ee3\u7801\uff0c\u5982 int 10h \u53ca int 16h \u4e2d\u65ad\u96c6\u5c31\u5b9a\u4e49\u5728 BIOS \u4e2d. <pre><code>code segment\nassume cs:code\nmain:\n    mov ax, 0B800h\n    mov es, ax\n    mov di, 0\n    mov al, 'A'\n    mov ah, 71h # \u767d\u8272\u80cc\u666f\uff0c\u84dd\u8272\u524d\u666f\n    mov cx, 2000\nagain:\n    mov word ptr es:[di], ax # ax = 7141h\n    add di, 2\n    sub cx, 1\n    jnz again\nend:\n    mov ah, 1\n    int 21h # \u7b49\u5f85\u952e\u76d8\u6572\u952e\n    mov ah, 4Ch\n    int 21h\ncode ends\nend main\n</code></pre> <pre><code># C \u4e2d\u7684\u5b9e\u73b0\n#include&lt;stdio.h&gt;\nint main()\n{\n    unsigned char far *p;\n    int i;\n    p = (unsigned char far)\n}\n</code></pre> A000:0000 \u662f\u56fe\u5f62\u6a21\u5f0f (graphics mode) \u4e0b\u7684\u663e\u5361\u5730\u5740. <pre><code>mov ah, 0\nmov al, 13h\nint 10h # \u628a\u663e\u5361\u5207\u6362\u5230 320 * 200 * 256 \u8272\u56fe\u5f62\u6a21\u5f0f\n# al = 12h \u8868\u793a 640 * 480 * 16 \u8272\u56fe\u5f62\u6a21\u5f0f\n# al = 3h \u8868\u793a\n</code></pre> (x, y) \u5750\u6807\u5bf9\u5e94\u7684\u663e\u5361\u504f\u79fb\u5730\u5740 = y * 320 + x.  </p>"},{"location":"ASM/#413","title":"4.13","text":"<pre><code>again:\n    mov ds:[di], ax\n    mov bx, 800h\nwait_wait:\n    mov dx, 0    \nwait_a_while:\n    sub ds, 1\n    jnz wait_a_while  \n    sub bx, 1\n    jnz wait_wait\n\n    mov word ptr ds:[di], 0020h\n    add di, 2\n    sub cx, 1\n    jnz again\n    mov ah, 1\n</code></pre> <p>\u952e\u76d8\u8f93\u5165\u9664\u4e86\u53ef\u4ee5\u8c03\u7528 int 21h/ah = 01h \u5916\uff0c\u8fd8\u53ef\u4ee5\u8c03\u7528 int 16h/ah = 00h \u5c5e\u4e8e BIOS \u4e2d\u65ad.  int 21h/ah = 01h \u4e0d\u80fd\u8bfb\u53d6\u4e0a\u4e0b\u5de6\u53f3\u65b9\u5411\u952e\u4e5f\u4e0d\u80fd\u8bfb\u53d6 PgUp PgDn Home End Insert Del F1~F12 \u8fd9\u4e9b\u952e. <pre><code>again:\n    mov ah, 1\n    int 16h # \u68c0\u6d4b\u952e\u76d8\u7f13\u51b2\u533a\u662f\u5426\u4e3a\u7a7a\uff0c\u82e5\u4e3a\u7a7a\uff0c\u5219\u8fd4\u56de ZF = 1\uff0c\u5426\u5219\u8fd4\u56de ZF = 0\n    jz no_key\nhas_key:\n    mov ah, 0\n    int 16h # ax = \u6240\u6572\u952e\u7684\u7f16\u7801\uff0c\u6b64\u5904\u4ece\u952e\u76d8\u7f13\u51b2\u4e2d\u8bfb\u53d6\u4e00\u4e2a\u952e\uff0c\u6839\u636e\u6240\u6572\u7684\u952e\u6267\u884c\u4e0d\u540c\u7684\u5206\u652f\nno_key:\n    jmp again    \n</code></pre></p> <p><pre><code>draw:\n    mov ax, [y]\n    mov bp, 80\n    mul bp # dx:ax = ax * bp\n    add ax, [x]\n    add ax, ax # \u6216 shl ax, 1\n    mov bx, ax\n    mov es:[bx], 1720h\ncheck_key: # \u5237\u65b0\u5c4f\u5e55\u753b\u9762\n    mov ah, 1\n    int 16h\n    jnz has_key\n    jmp check_key\nhas_key\n    cmp ax, 4800h\n    je is_up\n    cmp ax, 5000h\n    je is_up\n    cmp ax, 4B00h\n    je is_up\n    cmp ax, 4800h\n    je is_up\n    jmp exit\nis_up:\n    cmp [y], 0\n    je check_key\n    dec [y]\n    jmp draw\n</code></pre> push ax / push word ptr ds:[bx] push eax / push dword ptr ds:[bx] push ah \u6216 push al \u662f\u9519\u8bef\u7684\u7528\u6cd5\uff0c\u56e0\u4e3a push \u7684\u64cd\u4f5c\u6570\u53ea\u80fd\u662f 16 \u4f4d\u6216 32 \u4f4d pop ax / pop word ptr ds:[bx] pop eax / pop dword ptr ds:[bx] \u7a0b\u5e8f\u5f00\u59cb\u8fd0\u884c\u65f6\uff0cdos \u4f1a\u5bf9\u4ee5\u4e0b\u5bc4\u5b58\u5668\u505a\u521d\u59cb\u5316\u8d4b\u503c\uff1a cs = code ip = offset main ss = stk sp = 200h ds = es = psp \u6bb5\u5730\u5740 psp \u662f\u7a0b\u5e8f\u6bb5\u524d\u7f00(program segment prefix) \u5b83\u662f\u4e00\u4e2a\u957f\u5ea6\u4e3a 100h \u5b57\u8282\u7684\u5185\u5b58\u5757\uff0c\u4f4d\u4e8e\u5f53\u524d\u7a0b\u5e8f\u9996\u6bb5\u7684\u524d\u9762\uff0cpsp \u7531\u64cd\u4f5c\u7cfb\u7edf\u5206\u914d\u7ed9\u5f53\u524d\u7a0b\u5e8f\uff0c\u91cc\u9762\u5b58\u653e\u4e86\u4e0e\u8be5 exe \u76f8\u5173\u7684\u4e00\u4e9b\u4fe1\u606f\u5982\u547d\u4ee4\u884c\u53c2\u6570 <pre><code>int main(int argc, char*argv[])\n{\n\n}\nmain.exe 123 xyz\nargv[0]  [1] [2]\n</code></pre> <pre><code>data segment\nabc dw 1234,5678h\ndata ends\n\ncode segment\nassume cs:code, ds:data, ss:stk\nmain:\n    mov ax, data\n\nstk segment stack # \u5806\u6808\u6bb5\u53ea\u80fd\u5b9a\u4e49\u4e00\u4e2a\ndb 200h dup('S') # \u6216\u5199\u6210 dw 100h dup('0') \u4e3a\u4e86\u5206\u914d\u7a7a\u95f4\u800c\u5199\u4e86\u4e00\u4e2a\u65e0\u540d\u6570\u7ec4\nstk ends # \u7a0b\u5e8f\u521a\u5f00\u59cb\u8fd0\u884c\u65f6 ss = stk, sp = 200h\nend main\n</code></pre> \u5f53\u6e90\u7a0b\u5e8f\u6ca1\u6709\u5b9a\u4e49\u5806\u6808\u6bb5\u65f6\uff0css = \u9996\u6bb5\u7684\u6bb5\u5730\u5740 = 1000h\uff0c sp = 0 es: extra segment \u9644\u52a0\u6bb5  </p>"},{"location":"ASM/#420","title":"4.20","text":"OF DF IF TF SF ZF AF PF CF <p>CF: \u8fdb\u4f4d\u6807\u5fd7(carry flag) <pre><code>mov ah, 0FFh\nadd ah, 1 # ah = 0, CF = 1, \u4ea7\u751f\u4e86\u8fdb\u4f4d\nadd ah, 2 # ah = 2, CF = 0\nsub ah, 3 # ah = 0FFh, CF = 1, \u4ea7\u751f\u4e86\u9519\u4f4d\n</code></pre> \u79fb\u4f4d\u6307\u4ee4\u4e5f\u4f1a\u5f71\u54cd CF \u7684\u503c\uff0c\u6700\u540e\u79fb\u51fa\u53bb\u7684\u90a3\u4e00\u4f4d\u4f1a\u81ea\u52a8\u4fdd\u5b58\u5230 CF \u4e2d <pre><code>mov ah, 10110110B\nshr ah, 2 # \u8be5\u8bed\u6cd5\u8981\u6c42\u6e90\u4ee3\u7801\u6700\u524d\u9762\u52a0 .386\uff0c\u5e76\u4e14\u6bcf\u4e2a\u6bb5\u5b9a\u4e49\u65f6 segment \u540e\u8ddf use16\nmov cl, 2\nshr ah, cl # \u53f3\u79fb 2 \u4f4d\uff0cCF = 1\n</code></pre> \u4e0e CF \u76f8\u5173\u7684\u4e24\u6761\u8df3\u8f6c\u6307\u4ee4\uff1a jc\uff1a\u6709\u8fdb\u4f4d\u5219\u8df3\uff1bjnc\uff1a\u65e0\u8fdb\u4f4d\u5219\u8df3 adc\uff1a\u5e26\u8fdb\u4f4d\u52a0\uff1bclc: CF = 0; stc: CF = 1  </p> <p>ZF: \u96f6\u6807\u5fd7(zero flag) <pre><code>    sub ax, ax # ax =  0, ZF = 1\n    add ax, 1 # ax = 1, ZF = 0\n    add ax, 0FFh # ax = 0, ZF = 1, CF = 1\n    jz is_zero # \u4f1a\u8fdb\u884c\u8df3\u8f6c\uff0c\u56e0\u4e3a\u5f53\u524d ZF == 1\n</code></pre> \u4e0e jz \u76f8\u53cd\u7684\u6307\u4ee4\u662f jnz\uff0cjnz \u662f\u6839\u636e ZF == 0 \u4f5c\u51fa\u8df3\u8f6c jz \\equiv je; jnz \\equiv jne <pre><code>cmp ax, ax # cmp \u6307\u4ee4\u5185\u90e8\u505a\u4e86\u51cf\u6cd5\uff0c\u4f1a\u5f71\u54cd ZF \u7684\u72b6\u6001\njz/je is_equal \u4f1a\u8df3\u8f6c\u5230 is_equal\n</code></pre> <pre><code>int ax = 0x1234, bx = 0x1234, cx;\ncx = 1;\nif (ax != bx) cx = 0;\n# \u6ce8\u610f mov \u6307\u4ee4\u4e0d\u5f71\u54cd\u4efb\u4f55\u6807\u5fd7\u4f4d\n    mov ax, 1234h\n    mov bx, 1234h\n    sub ax, bx # ZF = 1\n    mov bx = 1 # \u6b64 mov \u4e0d\u5f71\u54cd sub \u6307\u4ee4\u4ea7\u751f\u7684 ZF \u72b6\u6001\n    jz is_zero\n    mov bx = 0\n    is_zero:\n</code></pre></p> <p>SF: \u7b26\u53f7\u6807\u5fd7(sign flag)\uff0c\u5176\u5b9e\u5c31\u662f\u8fd0\u7b97\u7ed3\u679c\u7684\u6700\u9ad8\u4f4d mov ah, 7Fh add ah, 1 # ah = 80h = 1000 0000B, SF = 1 sub ah, 1 # ah = 7Fh = 0111 1111B, SF = 0 jns positive # \u4f1a\u53d1\u751f\u8df3\u8f6c\uff0c\u56e0\u4e3a SF == 0 \u4e0e jns \u76f8\u53cd\u7684\u6307\u4ee4\u4e3a js\uff0cjs \u662f\u6839\u636e SF == 1 \u4f5c\u51fa\u8df3\u8f6c</p> <p>OF:\u6ea2\u51fa\u6807\u5fd7(overflow flag) <pre><code>    mov ah, 7Fh\n    add ah, 1 # ah = 80h, OF = 1, ZF = 0, CF = 0, SF = 1\n    mov ah, 80h\n    add ah, 0FFh # ah = 7Fh, OF = 1, ZF = 0, CF = 1, SF = 0\n    mov ah, 80h\n    sub ah, 1 # ah = 7Fh, OF = 1, ZF = 0, CF =0, SF = 0\n</code></pre> OF \u4e5f\u6709\u4e24\u6761\u76f8\u5173\u7684\u6307\u4ee4\uff1ajo, jno \u6b63\u8d1f\u76f8\u52a0\u6c38\u4e0d\u6ea2\u51fa \u5de6\u79fb\u4e5f\u4f1a\u9020\u6210\u6ea2\u51fa <pre><code>    mov ah, 81h # ah = 1000 0001B\n    shl ah, 1 # ah = 0000 0010B, OF = 1, CF = 1\n</code></pre> \u5de6\u79fb\u5bfc\u81f4\u7684\u6ea2\u51fa\u53ea\u8003\u8651\u79fb\u52a8 1 \u4f4d\uff0c\u53d6\u79fb\u4f4d\u540e\u7684\u6570\u7684\u6700\u9ad8\u4f4d\uff08\u5373\u539f\u6570\u636e\u7684\u6b21\u9ad8\u4f4d\uff09\u548c CF \uff08\u5373\u539f\u6570\u636e\u7684\u6700\u9ad8\u4f4d\u8fdb\u884c\uff09\u5f02\u6216\u8fd0\u7b97\u5f97\u5230 OF</p> <p>PF (Parity flag)\u5947\u5076\u6807\u5fd7 <pre><code>    mov ah, 4\n    add ah, 1 # ah = 0000 0101B PF = 1 \u8868\u793a\u6709\u5076\u6570\u4e2a 1\n    mov ax, 0101h\n    add ax, 0004h # ax = 0105h = 0000 0001 0000 0101B PF = 1; PF \u53ea\u7edf\u8ba1\u4f4e\u516b\u4f4d\u4e2d 1 \u7684\u4e2a\u6570\n</code></pre> PF \u6709\u4e24\u6761\u76f8\u5173\u6307\u4ee4\uff1ajp (PF == 1 \u5219\u8df3)\uff1bjnp (PF == 0 \u5219\u8df3) \u5176\u4e2d jp \u4e5f\u53ef\u4ee5\u5199\u4f5c jpe (jump if parity even), jnp \u4e5f\u53ef\u4ee5\u5199\u4f5c jpo (jump if parity odd) \u5047\u5b9a\u8981\u53d1\u9001\u5b57\u7b26 'C' = 0100 0011B\uff0c\u73b0\u5047\u5b9a\u4f4e 7 \u4f4d\u4e3a\u6570\u636e\u4f4d\uff0c\u6700\u9ad8\u4f4d\u4e3a\u6821\u9a8c\u4f4d\uff0c\u90a3\u4e48\u6821\u9a8c\u4f4d\u7684\u8ba1\u7b97\u65b9\u6cd5\u6709 2 \u79cd\uff1a 1. \u5947\u6821\u9a8c\uff1a\u6570\u636e\u4f4d + \u6821\u9a8c\u4f4d\u5408\u8d77\u6765\uff0c1 \u7684\u4e2a\u6570\u5fc5\u987b\u662f\u5947\u6570\uff1b 2. \u5076\u6821\u9a8c\uff1a\u6570\u636e\u4f4d + \u6821\u9a8c\u4f4d\u5408\u8d77\u6765\uff0c1 \u7684\u4e2a\u6570\u5fc5\u987b\u662f\u5076\u6570\u3002 \u73b0\u91c7\u7528\u5076\u6821\u9a8c\u6765\u53d1\u9001 'C' \uff0c\u90a3\u4e48\u6821\u9a8c\u4f4d\u5fc5\u987b\u662f 1\uff0c\u5373\u5b9e\u9645\u53d1\u9001\u7684 8 \u4f4d\u4e8c\u8fdb\u5236\u503c\u4e3a 1100 0011\uff0c\u5bf9\u65b9\u63a5\u53d7\u8fd9 8 \u4f4d\u503c\u5e76\u4fdd\u5b58\u5728\u5bc4\u5b58\u5668 al \u4e2d\uff0c\u63a5\u4e0b\u6765\u53ef\u4ee5\u6267\u884c\u4ee5\u4e0b\u4ee3\u7801\u6765\u9a8c\u8bc1 al \u4e2d\u7684\u503c\u662f\u5426\u6709\u9519\uff1a <pre><code>    or al, al # \u6545\u610f\u4ea7\u751f\u8fd0\u7b97\uff0c\u8feb\u4f7f CPU \u7edf\u8ba1 al \u4e2d 1 \u7684\u4e2a\u6570 \n    jnp error # if (PF == 0) goto error;\ngood:\n\nerror:\n</code></pre> <pre><code>or al, al\njz iszero\n\ncmp al, 0\nje iszero\n</code></pre> \u524d\u8005\u6548\u7387\u66f4\u9ad8</p> <p>AF (Auxiliary Flag) \u8f85\u52a9\u8fdb\u4f4d\u6807\u5fd7  \u4f4e 4 \u4f4d\u5411\u9ad8 4 \u4f4d\u4ea7\u751f\u8fdb\u4f4d\u6216\u501f\u4f4d\uff0c\u4f8b\u5982\uff1a <pre><code>mov ah, 1Fh # 0001 1111\nadd ah, 1 # ah = 20h, AF = 1\n</code></pre> AF \u548c BCD (Binary Coded Decimal)\u7801\u6709\u5173 <pre><code>mov al, 29h #\u5206\u949f\nadd al, 08 # \u8fc7\u4e86 8 \u5206\u949f\uff0c31h\ndaa # decimal adjust for addition \u52a0\u6cd5\u7684\u5341\u8fdb\u5236\u8c03\u6574\n# \u8fd9\u6761\u6307\u4ee4\u4f1a\u6839\u636e AF = 1 \u6216 (al &amp; 0Fh) &gt; 9\uff0c\u505a\u4ee5\u4e0b\u8fd0\u7b97:\n# al = al + 6 \u4f7f\u5f97 al = 37h \u800c\u5b9e\u9645\u4e0a 29 + 8 = 37\n# \u82e5 CF = 1 \u6216 al &amp; 0F0h &gt; 90h\uff0c\u5219 al += 60h\n</code></pre></p>"},{"location":"ASM/#511","title":"5.11","text":"<p>\u8bbe\u6709\u4ee5\u4e0b\u5b9a\u4e49 x dd 3.14 y dq 5.67 \u73b0\u5728\u6267\u884c 1. fld x 2. fld y \u6d6e\u70b9\u72b6\u6001\u5bc4\u5b58\u5668\u7684\u7b2c 11 \u4f4d\u81f3\u7b2c 13 \u4f4d\u4fdd\u5b58\u4e86\u5f53\u524d\u6307\u9488\u5904\u7684\u7269\u7406\u7f16\u53f7</p> <p>\u9664\u6cd5\u6ea2\u51fa</p>"},{"location":"ASM/#517","title":"5.17","text":"<p>\u4ee3\u7801\u590d\u5236\uff1a\u9700\u8981\u77e5\u9053\u4ee3\u7801\u5757\u7684\u8d77\u59cb\u5730\u5740\u548c\u4ee3\u7801\u5757\u7684\u957f\u5ea6 <pre><code>main:\npush cs\npop ds\npush cs\npop es\ncld\nmov ah, 2\nmov dl, 'A'\nint 21h\nmov si, offset begin_flag\nmov di, 1000h\nmov cx, offset end_flag - offset begin_flag ; \u53ef\u8ba1\u7b97\u7684\u5e38\u6570\nrep  movsb\nmov cx, offset begin_flag - offset main mov di, offset main ; \u6bc1\u53bb\u4e4b\u524d\u8c03\u7528\u8fc7\u7684\u4ee3\u7801\nmov bx, 1000h\njmp bx\nbegin_flag:\njmp next ;\u56e0\u4e3a\u662f\u6807\u53f7\u800c\u4e0d\u6562\u5192\u9669\uff0c\u6545\u7559\u4e0b\u4e86 3 \u4e2a\u5b57\u8282\uff0c\n;\u8fdb\u4e00\u6b65\u626b\u63cf\u53d1\u73b0 next \u5c31\u5728\u4e0b\u9762\uff0c\u4f46\u4ecd\u7559\u4e0b\u4e86 nop\nnext:\nmov al, 0\nrep stosb\n</code></pre></p>"},{"location":"CSAPP/","title":"CSAPP:\u6df1\u5165\u7406\u89e3\u8ba1\u7b97\u673a\u7cfb\u7edf","text":""},{"location":"CSAPP/#1overview","title":"1.Overview","text":"<p>\u7a0b\u5e8f\u5c31\u662f\u7531\u503c0\u548c1\u7ec4\u6210\u7684\u4f4d\uff0c\u53c8\u79f0 \u6bd4\u7279 (bit)\uff0c8\u4e2a\u4f4d\u88ab\u7ec4\u7ec7\u6210\u4e00\u7ec4\uff0c\u79f0\u4e3a \u5b57\u8282 (byte). \u53ea\u7531ASCII\u5b57\u7b26\u6784\u6210\u7684\u6587\u4ef6\u79f0\u4e3a \u6587\u672c\u6587\u4ef6 \uff0c\u6240\u6709\u5176\u4ed6\u6587\u4ef6\u90fd\u79f0\u4e3a \u4e8c\u8fdb\u5236\u6587\u4ef6 .  </p> <ul> <li>GCC\u7f16\u8bd1\u5668\u7ffb\u8bd1C\u7a0b\u5e8f\u6587\u4ef6\u5230\u53ef\u6267\u884c\u6587\u4ef6\u7684\u56db\u4e2a\u9636\u6bb5:  <ul> <li>\u9884\u5904\u7406\u9636\u6bb5 :\u9884\u5904\u7406\u5668(cpp)\u4f9d\u636e\u9884\u5904\u7406\u6307\u4ee4\u8fdb\u884c\u6587\u672c\u66ff\u6362\uff0c\u751f\u6210 .i \u6587\u4ef6.  </li> <li>\u7f16\u8bd1\u9636\u6bb5 :\u7f16\u8bd1\u5668(ccl)\u5c06 .i \u6587\u4ef6\u7ffb\u8bd1\u4e3a .s \u6587\u4ef6\uff0c\u5176\u5305\u542b\u4e00\u4e2a\u6c47\u7f16\u8bed\u8a00\u7a0b\u5e8f.  </li> <li>\u6c47\u7f16\u9636\u6bb5 :\u6c47\u7f16\u5668(as)\u5c06.s\u6587\u4ef6\u7ffb\u8bd1\u4e3a\u673a\u5668\u8bed\u8a00\u6307\u4ee4\uff0c\u5e76\u5c06\u5176\u6253\u5305\u6210\u4e00\u79cd\u53eb\u505a \u53ef\u91cd\u5b9a\u4f4d\u76ee\u6807\u7a0b\u5e8f (reloctable object program)\u7684\u683c\u5f0f\uff0c\u5e76\u5c06\u7ed3\u679c\u4fdd\u5b58\u5728 .o \u6587\u4ef6\u4e2d. .o \u6587\u4ef6\u662f\u4e8c\u8fdb\u5236\u6587\u4ef6.  </li> <li>\u94fe\u63a5\u9636\u6bb5 :\u94fe\u63a5\u5668(ld)\u8d1f\u8d23\u5c06\u5176\u4ed6 .o \u6587\u4ef6(\u6807\u51c6\u5e93\u7684\u51fd\u6570\u3001\u81ea\u5df1\u7f16\u5199\u7684\u5176\u4ed6\u7a0b\u5e8f\u7b49)\u4e0e\u6211\u4eec\u6c47\u7f16\u9636\u6bb5\u5f97\u5230\u7684 .o \u6587\u4ef6\u5408\u5e76\uff0c\u4ece\u800c\u5f97\u5230\u53ef\u6267\u884c\u6587\u4ef6. gcc\u7f16\u8bd1\u547d\u4ee4\u884c\u53c2\u8003\u6b64\u7bc7\u6587\u7ae0 :GCC\u57fa\u672c\u4f7f\u7528 </li> </ul> </li> </ul> <p>\u7cfb\u7edf\u7684\u786c\u4ef6\u7ec4\u6210 : - \u603b\u7ebf :\u643a\u5e26\u4fe1\u606f\u5b57\u8282\u5e76\u8d1f\u8d23\u5728\u5404\u4e2a\u90e8\u4ef6\u95f4\u4f20\u9012\uff0c\u5e38\u88ab\u8bbe\u8ba1\u4e3a\u4f20\u9001\u5b9a\u957f\u7684\u5b57\u8282\u5757\uff0c\u5373 \u5b57 (word)\uff0c\u5b57\u4e2d\u7684\u5b57\u8282\u957f(\u5373 \u5b57\u957f )\u662f\u4e00\u4e2a\u57fa\u672c\u7684\u7cfb\u7edf\u53c2\u6570\uff0c\u5404\u4e2a\u7cfb\u7edf\u4e2d\u90fd\u4e0d\u5c3d\u76f8\u540c\uff0c\u5927\u591a\u6570\u4e3a4(32\u4f4d)\u62168(64\u4f4d). - I/O \u8bbe\u5907 :\u7cfb\u7edf\u4e0e\u5916\u754c\u8054\u7cfb\u7684\u901a\u9053.\u6bcf\u4e2a I/O \u8bbe\u5907\u90fd\u901a\u8fc7\u4e00\u4e2a \u63a7\u5236\u5668 \u6216 \u9002\u914d\u5668 \u4e0e I/O \u603b\u7ebf\u76f8\u8fde\uff0c\u4e24\u8005\u7684\u533a\u522b\u5728\u4e8e\u5c01\u88c5\u65b9\u5f0f.\u63a7\u5236\u5668\u662f I/O \u8bbe\u5907\u6216\u7cfb\u7edf\u4e3b\u5370\u5236\u7535\u8def\u677f( \u4e3b\u677f )\u4e0a\u7684\u82af\u7247\u7ec4\uff0c\u9002\u914d\u5668\u662f\u4e00\u5757\u63d2\u5728\u4e3b\u677f\u63d2\u69fd\u4e0a\u7684\u5361. - \u4e3b\u5b58 :\u4e34\u65f6\u5b58\u50a8\u8bbe\u5907\uff0c\u5728\u5904\u7406\u5668\u6267\u884c\u7a0b\u5e8f\u65f6\uff0c\u7528\u6765\u5b58\u653e\u7a0b\u5e8f\u548c\u7a0b\u5e8f\u5904\u7406\u7684\u6570\u636e.\u7269\u7406\u5c42\u9762\uff0c\u4e3b\u5b58\u662f\u7531\u4e00\u7ec4 \u52a8\u6001\u968f\u673a\u5b58\u53d6\u5b58\u50a8\u5668 (DRAM)\u82af\u7247\u7ec4\u6210\u7684.\u4ece\u903b\u8f91\u4e0a\u6765\u8bf4\uff0c\u5b58\u50a8\u5668\u662f\u4e00\u4e2a\u7ebf\u6027\u7684\u5b57\u8282\u6570\u7ec4\uff0c\u6bcf\u4e2a\u5b57\u8282\u6709\u552f\u4e00\u7684\u5730\u5740\uff0c\u4ece0\u5f00\u59cb. - \u5904\u7406\u5668 : \u4e2d\u592e\u5904\u7406\u5355\u5143 (CPU)\uff0c\u7b80\u79f0 \u5904\u7406\u5668 \uff0c\u662f\u89e3\u91ca(\u6216 \u6267\u884c )\u5b58\u50a8\u5728\u4e3b\u5b58\u4e2d\u6307\u4ee4\u7684\u5f15\u64ce.\u6838\u5fc3\u662f\u4e00\u4e2a\u5927\u5c0f\u4e3a\u4e00\u4e2a\u5b57\u7684\u5b58\u50a8\u8bbe\u5907(\u6216 \u5bc4\u5b58\u5668 )\uff0c\u79f0\u4e3a \u7a0b\u5e8f\u8ba1\u6570\u5668 (PC).\u5728\u4efb\u4f55\u65f6\u523b\uff0cPC\u90fd\u6307\u5411\u4e3b\u5b58\u4e2d\u7684\u67d0\u6761\u673a\u5668\u8bed\u8a00\u6307\u4ee4(\u5373\u542b\u6709\u8be5\u6761\u6307\u4ee4\u7684\u5730\u5740). \u5904\u7406\u5668\u662f\u6309\u7167 \u6307\u4ee4\u96c6\u67b6\u6784 \u51b3\u5b9a\u7684\u6307\u4ee4\u6267\u884c\u6a21\u578b\u6765\u8fdb\u884c\u64cd\u4f5c\uff0c\u76f8\u90bb\u6267\u884c\u7684\u6307\u4ee4\u5185\u5b58\u4e2d\u672a\u5fc5\u76f8\u90bb. \u6307\u4ee4\u6307\u793a\u7684\u7b80\u5355\u64cd\u4f5c\u56f4\u7ed5\u7740\u4e3b\u5b58\u3001\u5bc4\u5b58\u5668\u6587\u4ef6 (register file)\u548c \u7b97\u672f/\u903b\u8f91\u5355\u5143 (ALU)\u8fdb\u884c.\u5bc4\u5b58\u5668\u6587\u4ef6\u662f\u4e00\u4e2a\u5c0f\u7684\u5b58\u50a8\u8bbe\u5907\u7531\uff0c\u4e00\u4e9b\u5355\u4e2a\u5b57\u957f\u7684\u5bc4\u5b58\u5668\u7ec4\u6210\uff0c\u6bcf\u4e2a\u5bc4\u5b58\u5668\u540d\u5b57\u552f\u4e00. ALU \u8ba1\u7b97\u65b0\u7684\u6570\u636e\u548c\u5730\u5740\u503c. - \u4e00\u4e9b\u7b80\u5355\u64cd\u4f5c\u7684\u4f8b\u5b50 :     - \u52a0\u8f7d :\u4ece\u4e3b\u5b58\u590d\u5236\u4e00\u4e2a\u5b57\u8282\u6216\u4e00\u4e2a\u5b57\u5230\u5bc4\u5b58\u5668\uff0c\u4ee5\u8986\u76d6\u5bc4\u5b58\u5668\u539f\u6765\u7684\u5185\u5bb9.     - \u5b58\u50a8 :\u4ece\u5bc4\u5b58\u5668\u590d\u5236\u4e00\u4e2a\u5b57\u8282\u6216\u8005\u4e00\u4e2a\u5b57\u5230\u4e3b\u5b58\u7684\u67d0\u4e2a\u4f4d\u7f6e\uff0c\u4ee5\u8986\u76d6\u8fd9\u4e2a\u4f4d\u7f6e\u4e0a\u539f\u6765\u7684\u5185\u5bb9.     - \u64cd\u4f5c :\u628a\u4e24\u4e2a\u5bc4\u5b58\u5668\u7684\u5185\u5bb9\u590d\u5236\u5230 ALU \uff0c ALU \u5bf9\u8fd9\u4e24\u4e2a\u5b57\u505a\u7b97\u672f\u8fd0\u7b97\uff0c\u5e76\u5c06\u7ed3\u679c\u5b58\u653e\u5230\u4e00\u4e2a\u5bc4\u5b58\u5668\u4e2d\uff0c\u4ee5\u8986\u76d6\u8be5\u5bc4\u5b58\u5668\u4e2d\u539f\u6765\u7684\u5185\u5bb9.     - \u8df3\u8f6c :\u4ece\u6307\u4ee4\u672c\u8eab\u4e2d\u62bd\u53d6\u4e00\u4e2a\u5b57\uff0c\u5e76\u5c06\u8fd9\u4e2a\u5b57\u590d\u5236\u5230 PC \u4e2d\uff0c\u4ee5\u8986\u76d6 PC \u4e2d\u539f\u6765\u7684\u503c.  </p> <p>\u5904\u7406\u5668\u7684\u6307\u4ee4\u96c6\u67b6\u6784\u4e0e\u5fae\u4f53\u7cfb\u7ed3\u6784\u662f\u6709\u533a\u522b\u7684\uff0c\u524d\u8005\u63cf\u8ff0\u6bcf\u6761\u673a\u5668\u4ee3\u7801\u6307\u4ee4\u7684\u6548\u679c\uff0c\u540e\u8005\u63cf\u8ff0\u5904\u7406\u5668\u5b9e\u9645\u4e0a\u5982\u4f55\u5b9e\u73b0.  </p> <ul> <li>\u9ad8\u901f\u7f13\u5b58\u5b58\u50a8\u5668 (cache memory\uff0c\u7b80\u79f0\u4e3a cache \u6216\u9ad8\u901f\u7f13\u5b58) :\u4f5c\u4e3a\u6682\u65f6\u7684\u96c6\u7ed3\u533a\u57df\uff0c\u5b58\u653e\u5904\u7406\u5668\u8fd1\u671f\u53ef\u80fd\u9700\u8981\u7684\u4fe1\u606f.  L1\u9ad8\u901f\u7f13\u5b58\u5bb9\u91cf\u8fbe\u5230\u6570\u4e07\u5b57\u8282\uff0c\u8bbf\u95ee\u901f\u5ea6\u51e0\u4e4e\u548c\u8bbf\u95ee\u5bc4\u5b58\u5668\u6587\u4ef6\u4e00\u6837\u5feb;L2\u9ad8\u901f\u7f13\u5b58\u5bb9\u91cf\u4e3a\u6570\u5341\u4e07\u5230\u6570\u767e\u4e07\u5b57\u8282\uff0c\u901a\u8fc7\u4e00\u6761\u7279\u6b8a\u7684\u603b\u7ebf\u8fde\u63a5\u5230\u5904\u7406\u5668.\u4e8c\u8005\u4f7f\u7528\u4e86 \u9759\u6001\u968f\u673a\u8bbf\u95ee\u5b58\u50a8\u5668 (SRAM)\u7684\u786c\u4ef6\u6280\u672f\u5b9e\u73b0. \u539f\u7406 :\u9ad8\u901f\u7f13\u5b58\u7684\u5c40\u90e8\u6027\u539f\u7406\uff0c\u5373\u7a0b\u5e8f\u5177\u6709\u8bbf\u95ee\u5c40\u90e8\u533a\u57df\u91cc\u7684\u6570\u636e\u548c\u4ee3\u7801\u7684\u8d8b\u52bf.  </li> </ul> <p>\u6bcf\u4e2a\u8ba1\u7b97\u673a\u7cfb\u7edf\u7684\u5b58\u50a8\u8bbe\u5907\u90fd\u88ab\u7ec4\u7ec7\u6210\u4e86\u4e00\u4e2a \u5b58\u50a8\u5668\u5c42\u6b21\u7ed3\u6784\uff0c\u4e3b\u8981\u601d\u60f3\u662f\u4e0a\u4e00\u5c42\u7684\u5b58\u50a8\u5668\u4f5c\u4e3a\u7b2c\u4e00\u5c42\u5b58\u50a8\u5668\u7684\u9ad8\u901f\u7f13\u5b58. </p> <ul> <li>\u64cd\u4f5c\u7cfb\u7edf :\u89c6\u4f5c\u5e94\u7528\u7a0b\u5e8f\u548c\u8f6f\u4ef6\u4e4b\u95f4\u63d2\u5165\u7684\u4e00\u5c42\u8f6f\u4ef6\uff0c\u4e24\u4e2a\u57fa\u672c\u529f\u80fd:(1)\u9632\u6b62\u786c\u4ef6\u88ab\u5931\u63a7\u7684\u5e94\u7528\u7a0b\u5e8f\u6ee5\u7528;(2)\u5411\u5e94\u7528\u7a0b\u5e8f\u63d0\u4f9b\u7b80\u5355\u4e00\u81f4\u7684\u673a\u5236\u6765\u63a7\u5236\u590d\u6742\u800c\u53c8\u901a\u5e38\u5927\u4e0d\u76f8\u540c\u7684\u4f4e\u7ea7\u786c\u4ef6\u8bbe\u5907. </li> <li> <p>\u8fdb\u7a0b :\u64cd\u4f5c\u7cfb\u7edf\u5bf9\u4e00\u79cd\u6b63\u5728\u8fd0\u884c\u7684\u7a0b\u5e8f\u7684\u4e00\u79cd\u62bd\u8c61\uff0c\u4e00\u4e2a\u7cfb\u7edf\u4e0a\u53ef\u4ee5\u540c\u65f6\u8fd0\u884c\u591a\u4e2a\u8fdb\u7a0b\uff0c\u800c\u6bcf\u4e2a\u8fdb\u7a0b\u53c8\u597d\u50cf\u5728\u72ec\u5360\u5730\u4f7f\u7528\u786c\u4ef6.\u800c \u5e76\u53d1\u8fd0\u884c \u662f\u6307\u4e00\u4e2a\u8fdb\u7a0b\u7684\u6307\u4ee4\u548c\u53e6\u4e00\u4e2a\u8fdb\u7a0b\u7684\u6307\u4ee4\u662f\u4ea4\u9519\u6267\u884c\u7684.\u5927\u591a\u6570\u7cfb\u7edf\u4e2d\uff0c\u9700\u8981\u8fd0\u884c\u7684\u8fdb\u7a0b\u6570\u662f\u591a\u4e8e\u53ef\u4ee5\u8fd0\u884c\u5b83\u4eec\u7684 CPU \u4e2a\u6570\u7684.\u5e76\u53d1\u8fd0\u884c\u662f\u4f9d\u9760\u5904\u7406\u5668\u5728\u8fdb\u7a0b\u95f4\u5207\u6362\u6765\u5b9e\u73b0\u7684\uff0c\u8fd9\u79cd\u673a\u5236\u88ab\u79f0\u4e3a\u4e0a\u4e0b\u6587\u5207\u6362.\u8fdb\u7a0b\u8f6c\u6362\u662f\u7531\u64cd\u4f5c\u7cfb\u7edf \u5185\u6838 (kernel) \u7ba1\u7406\u7684\uff0c\u5b83\u662f\u7cfb\u7edf\u7ba1\u7406\u5168\u90e8\u8fdb\u7a0b\u6240\u7528\u4ee3\u7801\u4e0e\u6570\u636e\u7ed3\u6784\u7684\u96c6\u5408.  </p> </li> <li> <p>\u7ebf\u7a0b :\u4e00\u4e2a\u8fdb\u7a0b\u53ef\u4ee5\u6709\u591a\u4e2a\u79f0\u4e3a\u7ebf\u7a0b\u7684\u6267\u884c\u5355\u5143\u7ec4\u6210\uff0c\u6bcf\u4e2a\u7ebf\u7a0b\u90fd\u8fd0\u884c\u5728\u8fdb\u7a0b\u7684\u4e0a\u4e0b\u6587\u4e2d\uff0c\u5e76\u5171\u4eab\u540c\u6837\u7684\u4ee3\u7801\u548c\u5168\u5c40\u6570\u636e.</p> </li> <li> <p>\u865a\u62df\u5185\u5b58 :\u662f\u6bcf\u4e2a\u8fdb\u7a0b\u770b\u4f3c\u72ec\u5360\u4f7f\u7528\u4e3b\u5b58.\u6bcf\u4e2a\u8fdb\u7a0b\u770b\u5230\u7684\u5185\u5b58\u90fd\u662f\u4e00\u81f4\u7684\uff0c\u79f0\u4e3a \u865a\u62df\u5730\u5740\u7a7a\u95f4. \u4e0b\u56fe\u4e3a Linux \u8fdb\u7a0b\u7684\u865a\u62df\u5730\u5740\u7a7a\u95f4\uff0c\u56fe\u4e2d\u7684\u5730\u5740\u662f\u4ece\u4e0b\u5f80\u4e0a\u589e\u5927\u7684\uff0c\u6700\u4e0a\u9762\u7684\u533a\u57df\u662f\u4fdd\u7559\u7ed9\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u7684\u4ee3\u7801\u548c\u6570\u636e\u7684\uff0c\u5e95\u90e8\u533a\u57df\u5b58\u653e\u7528\u6237\u8fdb\u7a0b\u5b9a\u4e49\u7684\u4ee3\u7801\u548c\u6570\u636e.  \u81ea\u4e0b\u5f80\u4e0a\u4e3a:  </p> <ul> <li>\u7a0b\u5e8f\u4ee3\u7801\u548c\u6570\u636e :\u4ee3\u7801\u4ece\u4e00\u56fa\u5b9a\u5730\u5740\u5f00\u59cb\uff0c\u4f46\u4e0d\u662f\u96f6\u5730\u5740.\u5f00\u59cb\u8fd0\u884c\u65f6\u5927\u5c0f\u5373\u88ab\u6307\u5b9a.  </li> <li>\u5806 :\u5806\u7684\u5927\u5c0f\u53ef\u4ee5\u5728\u8fd0\u884c\u65f6\u52a8\u6001\u5730\u6269\u5c55\u548c\u6536\u7f29(\u5982\u8c03\u7528 malloc \u548c free).  </li> <li>\u5171\u4eab\u5e93 :\u5b58\u653e\u7c7b\u4f3c\u4e8e C \u6807\u51c6\u5e93\u548c\u6570\u5b66\u5e93\u8fd9\u6837\u7684\u5171\u4eab\u5e93\u7684\u4ee3\u7801\u548c\u6570\u636e\u7684\u533a\u57df.  </li> <li>\u6808 :\u4f4d\u4e8e\u7528\u6237\u865a\u62df\u5730\u5740\u7a7a\u95f4\u9876\u90e8\u7684\u662f \u7528\u6237\u6808\uff0c\u7f16\u8bd1\u5668\u7528\u5b83\u6765\u5b9e\u73b0\u51fd\u6570\u8c03\u7528\uff0c\u4e5f\u53ef\u4ee5\u52a8\u6001\u7684\u6269\u5f20\u548c\u6536\u7f29\uff0c\u8c03\u7528\u51fd\u6570\u65f6\u589e\u957f\uff0c\u8fd4\u56de\u51fd\u6570\u65f6\u6536\u7f29.  </li> <li>\u5185\u6838\u865a\u62df\u5185\u5b58 :\u5730\u5740\u7a7a\u95f4\u9876\u90e8\u7684\u533a\u57df\u662f\u4e3a\u5185\u6838\u4fdd\u7559\u7684\uff0c\u4e0d\u5141\u8bb8\u5e94\u7528\u7a0b\u5e8f\u8bfb\u5199\u8fd9\u4e2a\u533a\u57df\u7684\u5185\u5bb9\u6216\u8005\u76f4\u63a5\u8c03\u7528\u5185\u6838\u4ee3\u7801\u5b9a\u4e49\u7684\u51fd\u6570.\u76f8\u53cd\uff0c\u5176\u5fc5\u987b\u8c03\u7528\u5185\u6838\u6765\u6267\u884c\u8fd9\u4e9b\u64cd\u4f5c.  </li> </ul> </li> <li> <p>\u6587\u4ef6 :\u5b57\u8282\u5e8f\u5217.\u6bcf\u4e2a I/O \u8bbe\u5907\u90fd\u53ef\u4ee5\u88ab\u89c6\u4f5c\u6587\u4ef6\uff0c\u4ee5\u4e00\u4e2a\u7edf\u4e00\u7684\u89c6\u89d2\u6765\u5904\u7406 I/O \u8bbe\u5907.  </p> </li> </ul> <p>\u4ece\u4e00\u4e2a\u5355\u72ec\u7684\u7cfb\u7edf\u6765\u770b\uff0c\u7f51\u7edc\u4e5f\u53ef\u89c6\u4e3a\u4e00\u4e2a I/O \u8bbe\u5907.  </p> <p>Amdahl \u5b9a\u5f8b(Amdahl's law):\u8bbe\u7cfb\u7edf\u6267\u884c\u67d0\u5e94\u7528\u7a0b\u5e8f\u7684\u539f\u65f6\u95f4\u4e3a \\(T_{old}\\)\uff0c\u5047\u8bbe\u7cfb\u7edf\u67d0\u90e8\u5206\u6267\u884c\u6240\u9700\u65f6\u95f4\u4e0e\u8be5\u65f6\u95f4\u7684\u6bd4\u4f8b\u4e3a \\(\\alpha\\)\uff0c\u800c\u8be5\u90e8\u5206\u6027\u80fd\u63d0\u5347\u6bd4\u4f8b\u4e3a \\(k\\). \u5219\u603b\u7684\u6267\u884c\u65f6\u95f4  </p> \\[T_{new} = T_{old}((1 - \\alpha) + \\alpha/k )\\] <p>\u8ba1\u7b97\u52a0\u901f\u6bd4 \\(S = T_{old}/T_{new}\\) \u4e3a  </p> \\[S = \\frac{1}{(1 - \\alpha ) + \\alpha /k }\\] <p>\u5e76\u53d1 :\u4e00\u4e2a\u540c\u65f6\u5177\u6709\u591a\u4e2a\u6d3b\u52a8\u7684\u7cfb\u7edf. \u5e76\u884c :\u7528\u5e76\u53d1\u4f7f\u4e00\u4e2a\u7cfb\u7edf\u8fd0\u884c\u7684\u66f4\u5feb.  </p> <p>\u7ebf\u7a0b\u7ea7\u5e76\u53d1 :\u4f9d\u8d56\u4e8e \u591a\u5904\u7406\u5668\u7cfb\u7edf.\u800c\u591a\u5904\u7406\u5668\u7cfb\u7edf\u7684\u666e\u53ca\u4f9d\u8d56\u4e8e \u591a\u6838\u5904\u7406\u5668 \u548c \u8d85\u7ebf\u7a0b(hyperthreading). \u591a\u6838\u5904\u7406\u5668 \u662f\u5c06\u591a\u4e2a CPU \u96c6\u6210\u5230\u4e00\u4e2a\u96c6\u6210\u7535\u8def\u82af\u7247\u4e0a. \u8d85\u7ebf\u7a0b\uff0c\u6709\u65f6\u4e5f\u79f0 \u540c\u65f6\u591a\u7ebf\u7a0b\uff0c\u8be5\u6280\u672f\u5141\u8bb8\u4e00\u4e2a CPU \u6267\u884c\u591a\u4e2a\u63a7\u5236\u6d41\u7684\u64cd\u4f5c.\u8d85\u7ebf\u7a0b\u7684\u5904\u7406\u5668\u53ef\u4ee5\u5728\u5355\u4e2a\u65f6\u949f\u5468\u671f\u7684\u57fa\u7840\u4e0a\u51b3\u5b9a\u8981\u6267\u884c\u54ea\u4e00\u4e2a\u7ebf\u7a0b.  </p> <p>\u6307\u4ee4\u7ea7\u5e76\u884c :\u73b0\u4ee3\u5904\u7406\u5668\u53ef\u4ee5\u540c\u65f6\u6267\u884c\u591a\u6761\u6307\u4ee4\u7684\u5c5e\u6027. \u6d41\u6c34\u7ebf :\u5728\u6d41\u6c34\u7ebf\u4e2d\uff0c\u5c06\u6267\u884c\u4e00\u6761\u6307\u4ee4\u6240\u9700\u8981\u7684\u6d3b\u52a8\u5212\u5206\u4e3a\u4e0d\u540c\u7684\u6b65\u9aa4\uff0c\u5c06\u5904\u7406\u5668\u7684\u786c\u4ef6\u7ec4\u7ec7\u6210\u4e00\u7cfb\u5217\u7684\u9636\u6bb5\uff0c\u6bcf\u4e2a\u9636\u6bb5\u6267\u884c\u4e00\u4e2a\u6b65\u9aa4. \u5982\u679c\u5904\u7406\u5668\u53ef\u4ee5\u8fbe\u5230\u6bd4\u4e00\u4e2a\u5468\u671f\u4e00\u6761\u6307\u4ee4\u66f4\u5feb\u7684\u6267\u884c\u6548\u7387\uff0c\u5c31\u79f0\u4e4b\u4e3a \u8d85\u6807\u91cf(superscalar)\u5904\u7406\u5668.</p> <p>\u5355\u6307\u4ee4\u3001\u591a\u6570\u636e\u5e76\u884c :\u5373 SIMD \u5e76\u884c\uff0c\u5927\u591a\u662f\u4e3a\u4e86\u63d0\u9ad8\u5904\u7406\u5f71\u50cf\u3001\u58f0\u97f3\u548c\u89c6\u9891\u6570\u636e\u5e94\u7528\u7684\u6267\u884c\u901f\u5ea6.  </p> <p>\u62bd\u8c61 \u4f7f\u6211\u4eec\u53ef\u4ee5\u7528\u7b80\u5355\u7684\u6a21\u578b\u53bb\u9690\u85cf\u5b9e\u9645\u5b9e\u73b0\u7684\u590d\u6742\u6027.</p>"},{"location":"ECC/","title":"Elliptic Curve Cryptography","text":"<p>Abstract</p> <p>\u672c\u90e8\u5206\u4e3b\u8981\u6765\u6e90\u4e8e 2023 \u5e74\u6d59\u6c5f\u5927\u5b66\u77ed\u5b66\u671f CTF101 \u8bfe\u7a0b\u4e2d crypto \u4e13\u9898\u7684\u7b2c\u4e8c\u8bb21\uff0c\u5e76\u7ed3\u5408\u4e86\u4e00\u90e8\u5206\u7f51\u4e0a\u7684 blog \u548c\u6587\u6863\u3002</p> <p>Warning</p> <p>\u6b63\u5728\u5efa\u8bbe\u4e2d\u3002</p>"},{"location":"ECC/#_1","title":"\u57fa\u7840\u77e5\u8bc6","text":""},{"location":"ECC/#_2","title":"\u5b9a\u4e49","text":"<p>\u6b63\u5f0f\u5b9a\u4e49\u800c\u8a00\uff0c\u692d\u5706\u66f2\u7ebf\u662f\u5149\u6ed1\u7684\u3001\u5c04\u5f71\u7684\u3001\u4e8f\u683c\u4e3a 1 \u7684\u4ee3\u6570\u66f2\u7ebf\uff0c\u5176\u4e0a\u6709\u4e00\u4e2a\u7279\u5b9a\u7684\u70b9 \\(O\\)\u3002\u692d\u5706\u66f2\u7ebf\u662f\u963f\u8d1d\u5c14\u7c07 \u2013 \u4e5f\u5c31\u662f\u8bf4\uff0c\u5b83\u6709\u4ee3\u6570\u4e0a\u5b9a\u4e49\u7684\u4e58\u6cd5\uff0c\u5e76\u4e14\u5bf9\u8be5\u4e58\u6cd5\u5f62\u6210\u963f\u8d1d\u5c14\u7fa4 \u2013 \u5176\u4e2d \\(O\\) \u5373\u4e3a\u5355\u4f4d\u5143\u3002</p> <p>\u4f46\u8fd8\u662f\u91c7\u53d6\u4e00\u4e9b\u66f4\u5bb9\u6613\u7406\u89e3\u7684\u65b9\u6cd5\u6765\u89e3\u91ca\u4e00\u4e0b\u3002\u6211\u4eec\u79f0\u6709\u5982\u4e0b\u5f62\u5f0f\u7684\u65b9\u7a0b\u5b9a\u4e49</p> \\[ y^2 = x^3 + ax + b \\] <p>\u4e14\u6ee1\u8db3\u56fe\u5f62\u65e0\u5c16\u70b9\u3001\u81ea\u76f8\u4ea4\u548c\u5b64\u7acb\u70b9\u7684\u66f2\u7ebf\u79f0\u4e3a\u692d\u5706\u66f2\u7ebf\uff0c\u4e14\u8be5\u65b9\u7a0b\u5f62\u5f0f\u88ab\u79f0\u4e3a\u692d\u5706\u66f2\u7ebf\u7684 Weierstrass \u5f62\u5f0f\u3002\u90a3\u4e48\u81ea\u7136\u4e5f\u5b58\u5728\u7740\u4e00\u4e9b\u5176\u4ed6\u5f62\u5f0f2\uff1a</p> Form Name Equation Weierstrass \\(y^2 = x^3 + ax + b\\) projective \\(y^2z = x^3 + axz^2 + bz^3\\) Jacobian \\(y^2 = x^3 + axz^4 + bz^6\\) Montgomery \\(by^2 = x^3 + ax^2 + x\\) Edward \\(x^2 + y^2 = c^2(1 + dx^2y^2)\\) Twisted Edward \\(ax^2 + y^2 = 1 + dx^2y^2\\) Huff \\(ax(y^2\u22121) = by(x^2\u22121)\\) Normmal \\(y^2 + axy + cy = x^3 + bx^2 + dx + e\\) <p>\u4e0d\u8fc7\u5e38\u7528\u7684\u8fd8\u662f Weierstrass \u5f62\u5f0f\uff0c\u800c\u56fe\u5f62\u6ee1\u8db3\u7684\u6761\u4ef6\u4e5f\u53ef\u4ee5\u53c2\u6570\u5316\u7684\u8868\u793a\uff0c\u5373</p> \\[ \\Delta = 4a^3 + 27b^2 \\neq 0. \\] <p>\u4f46\u6211\u4eec\u5728\u5bc6\u7801\u5b66\u9886\u57df\u5e94\u7528\u7684\u692d\u5706\u66f2\u7ebf\u5927\u90e8\u5206\u90fd\u662f\u5b9a\u4e49\u5728\u6709\u9650\u57df\u4e0a\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5176\u5b9e\u6211\u4eec\u4f7f\u7528\u7684\u662f\u6709\u9650\u4e2a\u79bb\u6563\u7684\u70b9\u6784\u6210\u7684\u56fe\u5f62\uff0c\u800c\u4e0d\u662f\u6574\u4e2a\u66f2\u7ebf\u3002</p> <p>\u5728 sage \u4e2d\uff0c\u5176\u9ed8\u8ba4\u7684\u692d\u5706\u66f2\u7ebf\u65b9\u7a0b\u5f62\u5f0f\u662f</p> \\[ y^2 + a_1xy + a_3y = x^3 + a_2x^2 + a_4x + a_6. \\] <p>\u5b9a\u4e49\u8bed\u53e5\u662f <code>EllipticCurve([a1,a2,a3,a4,a6])</code>. \u4f46\u6211\u4eec\u5e38\u7528\u7684\u5176\u5b9e\u662f Weierstrass \u5f62\u5f0f\uff0c\u6240\u4ee5\u5b9a\u4e49\u65f6\u53ea\u9700\u8981\u4f20\u8fdb\u4e24\u4e2a\u53c2\u6570\u5373\u53ef\uff0c\u4e5f\u5c31\u662f <code>EllipticCurve([a4,a6])</code>. \u800c\u5982\u679c\u8981\u9650\u5236\u5b9a\u4e49\u57df\u7684\u8bdd\u5219\u53ef\u4ee5\u518d\u4f20\u5165\u4e00\u4e2a\u53c2\u6570 \\(\\mathcal R\\)\uff0c\u5176\u53ea\u8981\u662f\u4e2a\u4efb\u610f\u7684\u4ea4\u6362\u73af\u5373\u53ef\u3002\u800c\u50cf\u4e0a\u9762\u8bf4\u7684\u6709\u9650\u57df\u4e0a\u7684\u692d\u5706\u66f2\u7ebf\u5219\u53ef\u4ee5\u8fd9\u6837\u5b9a\u4e49\uff1a <code>EllipticCurve(GF(p), [a1,a2,a3,a4,a6])</code>. \u6b64\u5916\u8fd8\u6709\u8bb8\u591a\u5b9a\u4e49\u65b9\u6cd5\uff0csage \u7684\u6587\u68633\u4e2d\u90fd\u5df2\u5199\u51fa\uff0c\u4e0d\u518d\u8d58\u8ff0\u3002</p>"},{"location":"ECC/#_3","title":"\u8fd0\u7b97","text":"<p>\u692d\u5706\u66f2\u7ebf\u4e0a\u7684\u5143\u7d20\u90fd\u662f\u70b9\uff0c\u90a3\u4e48\u8be5\u5982\u4f55\u5b9a\u4e49\u70b9\u7684\u8fd0\u7b97\u5462\uff1f</p> <ul> <li> <p>\u53d6\u8d1f\uff1a\u7531\u4e8e\u692d\u5706\u66f2\u7ebf\u662f\u5173\u4e8e \\(x\\) \u8f74\u5bf9\u79f0\u7684\uff0c\u6240\u4ee5\u5bf9\u4e8e\u5176\u4e0a\u4e00\u70b9 \\(A = (x, y)\\)\uff0c\u53d6\u8d1f\u8fd0\u7b97\u5c31\u662f\u5c06\u5176 \\(y\\) \u53d6\u8d1f\uff0c\u5373 \\(-A = (x, -y)\\)</p> </li> <li> <p>\u52a0\u6cd5\uff1a\u692d\u5706\u66f2\u7ebf\u4e0a\u6709\u4e24\u70b9 \\(A, B\\)\uff0c\u5b83\u4eec\u76f8\u52a0\u7684\u7ed3\u679c\u5b9a\u4e49\u4e3a \\(C\\)\uff0c\u5373 \\(C = A + B\\). \u90a3\u4e48\u5c31\u6709\u5fc5\u8981\u7a0d\u5fae\u8ba8\u8bba\u4e00\u4e0b \\(A, B\\)  \u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u6765\u786e\u5b9a \\(C\\) \u662f\u5982\u4f55\u8fd0\u7b97\u7684\u3002</p> <ul> <li> <p>\\(A \\neq B\\) \u4e14 \\(B \\neq -A\\) \uff1a\u8fd9\u4e24\u70b9\u786e\u5b9a\u4e86\u4e00\u6761\u76f4\u7ebf\uff0c\u4e0e\u692d\u5706\u66f2\u7ebf\u8054\u7acb\u7684\u8bdd\u53d1\u73b0\u662f\u53ef\u4ee5\u89e3\u51fa\u7b2c\u4e09\u4e2a\u89e3\u7684\uff0c\u7b2c\u4e09\u4e2a\u89e3\u5c31\u662f \\(-C\\) \uff0c\\(C\\) \u70b9\u53d6\u8d1f\u5c31\u884c\u3002</p> </li> <li> <p>\\(B = -A\\) \uff1a\u6839\u636e\u4e00\u79cd\u6734\u7d20\u7684\u60f3\u6cd5\uff0c\\(A + (-A) = O\\)\uff0c\u4e8b\u5b9e\u4e0a\u4e5f\u786e\u5b9e\u662f\u8fd9\u6837\uff0c\u4f46\u5782\u76f4\u4e8e \\(x\\) \u8f74\u7684\u76f4\u7ebf\u53c8\u5728\u54ea\u627e\u5230\u7b2c\u4e09\u4e2a\u70b9\u5462\uff1f\u8fd9\u5c31\u6d89\u53ca\u5230 \\(O\\) \u7684\u5b9a\u4e49\uff0c\u5176\u4f5c\u4e3a\u692d\u5706\u66f2\u7ebf\u7fa4\u4e0a\u7684\u5355\u4f4d\u5143\uff0c\u6307\u7684\u662f\u65e0\u7a77\u8fdc\u70b9 \\(\\infty\\)\uff0c\u501f\u52a9\u4e8e\u9ece\u66fc\u51e0\u4f55\uff0c\u6211\u4eec\u53ef\u4ee5\u4e0d\u4e25\u8c28\u5730\u8ba4\u4e3a\uff0c\u8fd9\u6761\u76f4\u7ebf\u4e8b\u5b9e\u4e0a\u5728\u65e0\u7a77\u8fdc\u70b9\u4e0e\u692d\u5706\u66f2\u7ebf\u76f8\u4ea4\u3002</p> </li> <li> <p>\\(B = A\\) \uff1a\u6b64\u65f6\u7684\u8fd9\u6761\u76f4\u7ebf\u5c31\u53d8\u6210\u4e86\u692d\u5706\u66f2\u7ebf\u5728\u70b9 \\(A\\) \u5904\u7684\u5207\u7ebf\uff0c\u659c\u7387  \\(k = \\frac{3x_A^2 + a}{2y_A}.\\) \u8054\u7acb\u540e\u8fd8\u662f\u4e09\u89e3\uff0c\u9664\u53bb\u4e24\u4e2a\u70b9 \\(A\\) \u4fbf\u662f\u70b9 \\(-C\\) \uff0c\u4e0e\u7b2c\u4e00\u79cd\u60c5\u51b5\u7c7b\u4f3c\u3002</p> </li> </ul> <p>\u6240\u4ee5\uff0c\u692d\u5706\u66f2\u7ebf\u4e0a\u7684\u52a0\u6cd5\u662f\u6784\u6210\u4e00\u4e2a\u7fa4\u7684\u3002\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\u6211\u4eec\u5e0c\u671b\u83b7\u53d6\u4e00\u4e2a\u5927\u7d20\u6570\u9636\u7684\u5faa\u73af\u7fa4\uff0c\u6240\u4ee5\u9009\u53d6\u4e00\u70b9\u4f5c\u4e3a\u751f\u6210\u5143\uff08\u6216\u79f0\u57fa\u70b9\uff09\\(G\\)\uff0c\u5728\u8fd9\u4e2a\u751f\u6210\u5143\u751f\u6210\u7684\u5faa\u73af\u5b50\u7fa4\u4e0a\u8fdb\u884c\u8ba8\u8bba\u3002\u800c\u6211\u4eec\u4e5f\u53ef\u4ee5\u8bc1\u660e\uff0c\u5176\u5b9e\u692d\u5706\u66f2\u7ebf\u7fa4\u5fc5\u7136\u4e0e\u4e00\u4e2a\u5faa\u73af\u7fa4\u6216\u8005\u4e24\u4e2a\u5faa\u73af\u7fa4\u7684\u76f4\u548c\u540c\u6784\u3002</p> </li> <li> <p>\u4e58\u6cd5\uff1a\u5b9a\u4e49\u81ea\u52a0\u6cd5\uff0c\u5c06 \\(k\\) \u4e2a\u70b9 \\(A\\) \u7684\u548c\u79f0\u4e3a \\(kA\\)\uff0c\u4f46\u6216\u8bb8\u53eb\u6570\u4e58\u66f4\u5408\u7406\u4e9b\u3002\u5982\u679c\u6211\u4eec\u6362\u4e00\u79cd\u53eb\u6cd5\uff0c\u79f0\u692d\u5706\u66f2\u7ebf\u7684\u52a0\u6cd5\u4e3a\u201c\u4e58\u6cd5\u201d\uff0c\u90a3\u4e48\u692d\u5706\u66f2\u7ebf\u7684\u4e58\u6cd5\u5c31\u53d8\u6210\u4e86\u201c\u5e42\u201d\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528\u53cd\u590d\u5e73\u65b9\u6cd5\uff08\u5feb\u901f\u5e42\uff09\u6765\u8ba1\u7b97\u4e58\u6cd5\u3002\u4e3a\u9632\u6b62\u4fa7\u4fe1\u9053\u653b\u51fb\uff0c\u901a\u5e38\u91c7\u7528 Montgomery's Ladder \u7b97\u6cd54\uff0c\u5176\u4f18\u52bf\u5728\u4e8e\u8ba1\u7b97\u65f6\u95f4\u786e\u5b9a\u3002</p> </li> <li> <p>\u9664\u6cd5\uff1aSchoof's algorithm \u63d0\u4f9b\u4e86\u4e00\u4e2a\u591a\u9879\u5f0f\u65f6\u95f4\u5185\u8ba1\u7b97\u692d\u5706\u66f2\u7ebf\u9636 \\(\\lvert E \\rvert\\) \u7684\u65b9\u6cd5\uff0c\u800c\u6839\u636e Langrange's theorem\uff0c\u5faa\u73af\u5b50\u7fa4\u7684\u9636\u5fc5\u6574\u9664\u7fa4\u9636\uff0c\u6240\u4ee5\u82e5\u662f\u53ef\u4ee5\u56e0\u5f0f\u5206\u89e3 \\(\\lvert E \\rvert\\)\uff0c\u5373 \\(\\lvert E \\rvert = n_1^{p_1}n_2^{p_2}\\cdots n_k^{p_k}\\) \uff0c\u5e76\u627e\u51fa\u6ee1\u8db3 \\(nP = 0\\) \u7684\u6700\u5c0f\u6b63\u6574\u6570 \\(n_i\\) \uff0c\u4fbf\u6c42\u5f97\u4e86\u5b50\u7fa4\u7684\u9636\uff0c\u4e5f\u5c31\u662f\u692d\u5706\u66f2\u7ebf\u7fa4\u7684\u9636\u3002</p> <p>\u800c\u5728 sage \u4e0a\u53ef\u4ee5\u76f4\u63a5\u6267\u884c <code>E.order()</code> \u5f97\u51fa\u692d\u5706\u66f2\u7ebf \\(E\\) \u7684\u9636\u3002</p> <p>\u800c\u5f53\u692d\u5706\u66f2\u7ebf\u7684\u9636 \\(n\\) \u662f\u4e00\u4e2a\u5927\u7d20\u6570\u65f6\uff0c\u7531\u4e8e </p> \\[ (kn + x)G = knG + xG = kO + xG = xG, \\forall k, x \\in \\mathbb{Z} \\] <p>\u6240\u4ee5\u5f53\u4e58\u6570\u5728\u6a21 \\(n\\) \u610f\u4e49\u4e0b\u76f8\u540c\u65f6\uff0c\u4e58\u6cd5\u7ed3\u679c\u76f8\u540c\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u628a\u6240\u6709\u7684\u4e58\u6570\u90fd\u5148\u6a21 \\(n\\) \uff0c\u9650\u5236\u5728 \\(GF(n)\\) \u4e0a\uff0c\u90a3\u4e48\u76f8\u5e94\u7684\u9664\u6cd5\u5c31\u662f\u4e58\u4ee5\u4e58\u6cd5\u9006\u5143\u4e86\uff0c\u5373 \\(G/x = (x^{-1})G\\). </p> </li> </ul>"},{"location":"ECC/#_4","title":"\u53cc\u7ebf\u6027\u914d\u5bf9","text":"<p>\u4e00\u822c\u6765\u8bf4\uff0c\u53cc\u7ebf\u6027\u914d\u5bf9\u662f\u4e00\u4e2a\u4f9d\u6258\u4e8e\u4e09\u4e2a\u7d20\u6570 \\(p\\) \u9636\u5faa\u73af\u4e58\u6cd5\u7fa4\u800c\u5b9a\u4e49\u7684\u6620\u5c04\u3002\u800c\u5728\u692d\u5706\u66f2\u7ebf\u7fa4\u4e0b\u7684\u8bdd\uff0c\u5f97\u5148\u5f15\u8fdb\u4e00\u4e2a\u6982\u5ff5\u3002</p> <p>\u5d4c\u5165\u5ea6\u6570\uff1a\u5f53\u66f2\u7ebf\u5b9a\u4e49\u5728 \\(GF(p)\\) \u4e0a\uff0c\u66f2\u7ebf\u7fa4\u7684\u9636\u4e3a \\(n\\) \u65f6\uff0c\u5b9a\u4e49\u66f2\u7ebf\u7684\u5d4c\u5165\u5ea6\u6570\u4e3a\u6ee1\u8db3 \\(p^k \\equiv 1 \\pmod n\\) \u7684\u6700\u5c0f\u6b63\u6574\u6570 \\(k\\)\u3002\u800c\u5982\u679c\u6a21 \\(n\\) \u610f\u4e49\u4e0b\u7684\u6574\u6570\u4e58\u6cd5\u662f\u4e00\u4e2a\u7fa4\uff0c\u90a3\u4e48 \\(k\\) \u5c31\u662f\u7531 \\(p\\) \u751f\u6210\u7684\u5b50\u7fa4\u7684\u9636\u3002</p> <p>\u692d\u5706\u66f2\u7ebf\u7fa4\u4e0a\u7684\u53cc\u7ebf\u6027\u914d\u5bf9\u5efa\u7acb\u5728\u5b9a\u4e49\u57df\u4e3a \\(GF(p)\\) \u7684\u692d\u5706\u66f2\u7ebf\u7fa4\uff0c\u5b9a\u4e49\u57df\u4e3a \\(GF(p^k)\\) \u7684\u692d\u5706\u66f2\u7ebf\u7fa4\uff0c\u4ee5\u53ca \\(GF(p^k)\\) \u8fd9\u4e09\u4e2a\u7fa4\u4e0a\u3002\u5373\u53cc\u7ebf\u6027\u6620\u5c04 \\(e\\): \\(E(GF(p)) \\times E(GF(p^k)) \\rightarrow GF(p^k)\\)\uff0c\u6709 \\(e(A, B) = c\\)\uff0c\u5176\u4e2d \\(A\\) \u4e3a \\(E(GF(p))\\) \u4e0a\u7684\u70b9\uff0c\\(B\\) \u4e3a \\(E(GF(p^k))\\) \u4e0a\u7684\u70b9\uff0c\\(c\\) \u4e3a \\(GF(p^k)\\) \u4e0a\u7684\u6570\u3002\u6ce8\u610f\u8fd9\u91cc\u7684\u53cc\u7ebf\u6027\u914d\u5bf9\u662f\u4ece\u4e24\u4e2a\u52a0\u6cd5\u5faa\u73af\u7fa4\u6620\u5c04\u5230\u4e00\u4e2a\u4e58\u6cd5\u5faa\u73af\u7fa4\u4e0a\u7684\uff0c\u5176\u6240\u6ee1\u8db3\u7684\u53cc\u7ebf\u6027\u5982\u4e0b\u3002</p> <p>\u53cc\u7ebf\u6027\uff1a</p> \\[ \\forall A, C \\in E(GF(p)), B, D \\in E(GF(p^k)), x, y \\in \\mathbb{Z}_p, e(xA, yB) = e(A, B)^{xy}, e(A + C, B) = e(A, B)e(A, C), e(A, B + D) = e(A, B)e(A, D) \\] <p>\u5176\u5728\u4e09\u65b9\u5bc6\u94a5\u4e00\u8f6e\u5bc6\u94a5\u534f\u5546\u3001BLS \u77ed\u7b7e\u540d\u7b97\u6cd5\u548c SM9 \u6807\u8bc6\u5bc6\u7801\u7b97\u6cd5\u4e2d\u6709\u6240\u5e94\u7528\u3002</p>"},{"location":"ECC/#_5","title":"\u79bb\u6563\u5bf9\u6570\u4e0e\u76f8\u5e94\u653b\u51fb","text":""},{"location":"ECC/#ecdlp","title":"\u692d\u5706\u66f2\u7ebf\u7fa4\u4e0a\u7684\u79bb\u6563\u5bf9\u6570\u56f0\u96be\u95ee\u9898\uff08ECDLP\uff09","text":"<p>\u692d\u5706\u66f2\u7ebf\u4e4b\u6240\u4ee5\u80fd\u5e94\u7528\u4e8e\u5bc6\u7801\u5b66\u4e2d\uff0c\u662f\u56e0\u4e3a\u5728\u5176\u4e0a\u6709\u4e00\u4e2a\u8457\u540d\u7684\u56f0\u96be\u95ee\u9898\uff1a\u79bb\u6563\u5bf9\u6570\u56f0\u96be\u95ee\u9898\u3002\u4f46\u4ed4\u7ec6\u4e00\u60f3\u7684\u8bdd\u4f1a\u53d1\u73b0\uff0c\u5176\u5b9e\u692d\u5706\u66f2\u7ebf\u7fa4\u662f\u548c\u6a21 \\(n\\) \u610f\u4e49\u4e0b\u7684\u6574\u6570\u52a0\u6cd5\u7fa4\u540c\u6784\u7684\uff0c\u6309\u7406\u8bf4\u6c42\u89e3\u79bb\u6563\u5bf9\u6570\u5e76\u4e0d\u5e94\u8be5\u56f0\u96be\u3002\u4e8b\u5b9e\u4e5f\u662f\u5982\u6b64\uff0c\u692d\u5706\u66f2\u7ebf\u7fa4\u548c\u6574\u6570\u52a0\u6cd5\u7fa4\u7684\u8fd0\u7b97\u672c\u8eab\u5e76\u4e0d\u592a\u56f0\u96be\uff0c\u4f46\u56f0\u96be\u5728\u4e8e\u540c\u6784\u6620\u5c04\u7684\u6784\u5efa\uff0c\u8fd9\u624d\u662f\u6838\u5fc3\u6240\u5728\u3002\u800c\u4ee5\u4e0b\u7684\u51e0\u79cd\u653b\u51fb\uff0c\u5c31\u5efa\u7acb\u5728\u66f2\u7ebf\u7279\u6b8a\u800c\u5bfc\u81f4\u7684\u540c\u6784\u6620\u5c04\u6613\u4e8e\u6784\u5efa\u3002</p>"},{"location":"ECC/#_6","title":"\u653b\u51fb\u624b\u6bb5","text":"<ul> <li>\u5947\u5f02\u66f2\u7ebf\u653b\u51fb</li> </ul> <p>\u524d\u9762\u6211\u4eec\u63d0\u5230\u692d\u5706\u66f2\u7ebf\u7684\u5b9a\u4e49\u6ee1\u8db3\u56fe\u5f62\u65e0\u5c16\u70b9\u3001\u81ea\u76f8\u4ea4\u548c\u5b64\u7acb\u70b9\uff0c\u4f46\u5047\u5982\u53c2\u6570\u5e76\u6ca1\u6709\u88ab\u6070\u5f53\u7684\u9009\u53d6\u800c\u51fa\u73b0\u4e86\u8fd9\u4e9b\u60c5\u51b5\u4f1a\u53d1\u751f\u4ec0\u4e48\u5462\uff1f</p> <p>\u66f2\u7ebf \\(y^2=(x- \\alpha)^3\\) \u88ab\u79f0\u4f5c cusp\uff0c\u800c\u66f2\u7ebf \\(y^2=(x- \\alpha)^2(x- \\beta)\\) \u88ab\u79f0\u4f5c node\uff0c\u5bf9\u4ed6\u4eec\u800c\u8a00\uff0c\u70b9 \\(( \\alpha, 0)\\) \u90fd\u88ab\u79f0\u4f5c\u5947\u5f02\u70b9\u3002 \u8fd9\u4e24\u79cd\u66f2\u7ebf\u81f4\u547d\u7684\u95ee\u9898\u5c31\u662f\u5b83\u4eec\u592a\u8fc7\u7b80\u5355\uff0c\u4ee5\u81f4\u4e8e\u5f88\u5bb9\u6613\u5c31\u80fd\u627e\u5230\u540c\u6784\u6620\u5c04\uff0c\u5c06\u692d\u5706\u66f2\u7ebf\u7fa4\u4e0a\u7684\u95ee\u9898\u8f6c\u79fb\u5230\u52a0\u6cd5\u7fa4\u6216\u4e58\u6cd5\u7fa4\u4e0a\u3002</p> <p>\u5bf9 cusp \u800c\u8a00\uff0c\u5b58\u5728\u5982\u4e0b\u7684\u4ece\u692d\u5706\u66f2\u7ebf\u7fa4\u5230 \\(GF(p)\\) \u52a0\u6cd5\u7fa4\u4e0a\u7684\u540c\u6784\u6620\u5c04\uff1a</p> \\[ \\begin{array}{rrcl} \\varphi : &amp; E(GF(p))     &amp; \\longrightarrow &amp; GF(p)^{+}, \\\\           &amp; (x,y) &amp; \\longmapsto     &amp; \\frac{y}{x-\\alpha}. \\end{array} \\] <p>\u800c\u5bf9 node \u800c\u8a00\uff0c\u5b58\u5728\u5982\u4e0b\u7684\u4ece\u692d\u5706\u66f2\u7ebf\u7fa4\u5230 \\(GF(p)\\) \u4e58\u6cd5\u7fa4\u4e0a\u7684\u540c\u6784\u6620\u5c04\uff1a</p> \\[ \\begin{array}{rrcl} \\varphi : &amp; E(GF(p))     &amp; \\longrightarrow &amp; GF(p)^{\\times}, \\\\           &amp; (x,y) &amp; \\longmapsto     &amp; \\frac{y + \\sqrt{\\alpha-\\beta}(x-\\alpha)}{y - \\sqrt{\\alpha-\\beta}(x-\\alpha)}. \\end{array} \\] <p>\u501f\u52a9\u8fd9\u4e24\u4e2a\u6620\u5c04\uff0c\u8fd9\u4e24\u79cd\u66f2\u7ebf\u4e0a\u7684\u79bb\u6563\u5bf9\u6570\u95ee\u9898\u5c31\u53ef\u4ee5\u6c42\u89e3\u4e86\u3002</p> <ul> <li>\u5f02\u5e38\u66f2\u7ebf\u653b\u51fb5\uff08Anomalous Curves &amp; SMART Attack\uff09</li> </ul> <ol> <li> <p>CTF101-Labs-2023-Crypto-Lab3.\u00a0\u21a9</p> </li> <li> <p>\u8868\u683c\u53c2\u8003\u4e86\u8fd9\u7bc7 blog.\u00a0\u21a9</p> </li> <li> <p>Elliptic curve constructor \u21a9</p> </li> <li> <p>Montgomery's Ladder.\u00a0\u21a9</p> </li> <li> <p>\u672c\u90e8\u5206\u653b\u51fb\u5b9e\u73b0\u7684\u6570\u5b66\u57fa\u7840\u53c2\u89c1\u8fd9\u7bc7 blog\uff0c\u4e0d\u8fc7\u4e5f\u6709\u5176\u4ed6\u7684\u6570\u5b66\u7406\u8bba\u53ef\u4ee5\u8fbe\u5230\u540c\u6837\u7684\u6548\u679c.\u00a0\u21a9</p> </li> </ol>"},{"location":"links/","title":"\u4f60\u6765\u5230\u4e86\u6ca1\u6709\u4eba\u7684\u8352\u539f","text":""},{"location":"math/AbstractAlgebra/","title":"\u62bd\u8c61\u4ee3\u6570","text":"<p>Abstract</p> <p>\u672c\u90e8\u5206\u4e3a\u6d59\u6c5f\u5927\u5b66 2023 - 2024 \u5b66\u5e74\u79cb\u51ac\u5b66\u671f\u62bd\u8c61\u4ee3\u6570\u8bfe\u7a0b\u7b14\u8bb0\uff0c\u6559\u6750\u4e3a GTM73(Algebra, Hungerford)\u3002</p> <p>Warning</p> <p>\u6b63\u5728\u5efa\u8bbe\u4e2d</p>"},{"location":"math/AbstractAlgebra/ChapterOne/","title":"Chapter I Groups","text":""},{"location":"math/AbstractAlgebra/ChapterOne/#semigroups-monoids-and-groups","title":"Semigroups, Monoids and Groups","text":"<p>Definition 1.1. </p> <p>Semigroup: A nonempty set \\(G\\) together with a binary operation on \\(G\\) which is </p> <p>(i) associative: \\(a(bc) = (ab)c\\) for all \\(a, b, c \\in G\\). \uff08\u7ed3\u5408\u5f8b\uff09 </p> <p>Monoid: A semigroup \\(G\\) which contains a </p> <p>(ii) (two-sided) identity element \\(e \\in G\\) such that \\(ae = ea = a\\) for all \\(a \\in G\\). \uff08\u5e7a\u5143\uff09 </p> <p>Group: A monoid \\(G\\) such that </p> <p>(iii) for every \\(a \\in G\\) there exists a (two-sided) inverse element \\(a^{-1} \\in G\\) such that \\(a^{-1}a = aa^{-1} = e\\). \uff08\u9006\u5143\uff09</p> <p>A semigroup \\(G\\) is said to be abelian or commutative if its binary operation is </p> <p>(iv) commutative: \\(ab = ba\\) for all \\(a,b \\in G\\). \uff08\u4ea4\u6362\u5f8b\uff09</p> <p>Order: The cardinal number \\(\\lvert G \\rvert\\).  </p> <p>Theorem 1.2. (I) If \\(G\\) is a monoid, then the identity element \\(e\\) is unique.</p> <p>(II) If \\(G\\) is a group, then</p> <p>(i) \\(c \\in G\\) and \\(cc = c \\Rightarrow c = e\\);</p> <p>(ii) for all \\(a, b, c \\in G\\), \\(ab = ac \\Rightarrow b = c\\) and \\(ba = ca \\Rightarrow b = c\\) (left and right cancellation);</p> <p>(iii) for each \\(a \\in G\\), the inverse element \\(a^{-1}\\) is unique;</p> <p>(iv) for each \\(a \\in G\\), \\((a^{-1})^{-1} = a\\);</p> <p>(v) for \\(a, b \\in G\\), \\((ab)^{-1} = b^{-1}a^{-1}\\);</p> <p>(vi) for \\(a, b \\in G\\) the equations \\(ax = b\\) and \\(ya = b\\) have unique solutions in \\(G\\): \\(x = a^{-1}b\\) and \\(y = ba^{-1}\\).</p> <p>Proposition 1.3. Let \\(G\\) be a semigroup. Then \\(G\\) is a group if and only if the following conditions hold:</p> <p>(i) there exists an element \\(e \\in G\\) such that \\(ea = a\\) for all \\(a \\in G\\) (left identity element);</p> <p>(ii) for each \\(a \\in G\\), there exists an element \\(a^{-1} \\in G\\) such that \\(a^{-1}a = e\\) (left inverse). </p> <p>Remark: An analogous result holds for \"right inverses\" and a \"right identity.\" </p> <p>Proposition 1.4.  Let \\(G\\) he a semigroup. Then \\(G\\) is a group if and only if for all \\(a, b \\in G\\) the equations \\(ax = b\\) and \\(ya = b\\) have solutions in \\(G\\).</p> <p>Direct product: \\(G, H\\) are two groups with identities \\(e_G, e_H\\) respectively. Their direct product is the group whose underlying set is \\(G \\times H\\) and whose binary operation is given by:</p> \\[ (a, b)(a', b') = (aa', bb'), \\enspace where \\enspace a, a' \\in G; b, b' \\in H. \\] <p>Theorem 1.5. Let \\(\\mathbf{R}\\)(~) be an equivalence relation on a monoid \\(G\\) such that \\(a_1\\) ~ \\(a_2\\) and \\(b_1\\) ~ \\(b_2\\) imply \\(a_1b_1\\) ~ \\(a_2b_2\\) for all \\(a_i,b_i \\in G\\). Then the set \\(\\mathbf{G/R}\\) of all equivalence classes of \\(G\\) under \\(R\\) is a monoid under the binary operation defined by \\((\\overline{a})(\\overline{b}) = \\overline{ab}\\), where \\(\\overline{x}\\) denotes the equivalence class of \\(x \\in G\\). If \\(G\\) is an (abelian) group, then so is \\(\\mathbf{G/R}\\).</p> <p>An equivalence relation on a monoid \\(G\\) that satisfies the hypothesis of the theorem is called a congruence relation on \\(G\\).</p> <p>The (additive) group of integers modulo \\(m\\): \\(\\mathbf{Z}_m = \\{\\overline{0}, \\overline{1}, \\ldots, \\overline{m - 1}\\}\\). A commutative monoid, and \\(\\mathbf{Q/Z}\\) is called the group of rationals modulo one. </p> <p>Meaningful product of \\(a_1, \\ldots, a_n\\): If \\(n = 1\\), the only meaningful product is \\(a_1\\); else a meaningful product is defined to be any product  of the form \\((a_1\\ldots a_m)(a_{m + 1}\\ldots a_n)\\) where \\(m &lt; n\\) and \\((a_1\\ldots a_m)\\) and \\((a_{m + 1}\\ldots a_n)\\) are meaningful products of \\(m\\) and \\(n - m\\) elements respectively.</p> <p>Standard n product \\(\\prod_{i = 1}^n a_i\\) of \\(a_1, \\ldots, a_n\\):</p> \\[ \\prod_{i = 1}^1 a_i = a_1; \\enspace and \\enspace for \\enspace n &gt; 1, \\prod_{i = 1}^n a_i = \\left(\\prod_{i = 1}^{n - 1} a_i\\right)a_n. \\] <p>Theorem 1.6. (Generalized Associative Law) If \\(G\\) is a semigroup and \\(a_1, \\ldots,a_n \\in G\\), then any two meaningful products of \\(a_1, \\ldots,a_n\\) in this order are equal. </p> <p>Corollary 1.7. (Generalized Commutative Law) If \\(G\\) is a commutative semigroup and \\(a_1, \\ldots,a_n \\in G\\), then for any permutation \\(i_1, \\ldots , i_n\\) of \\(1, \\ldots ,n\\), \\(a_1a_2\\cdots a_n = a_{i_1}a_{i_2}\\cdots a_{i_n}\\).</p> <p>Definition 1.8. Let \\(G\\) be a semigroup, \\(a \\in G\\) and \\(n \\in N^*\\). </p> <p>The element \\(a^n \\in G\\) is defined to be the standard \\(n\\) product \\(\\prod_{i = 1}^n a_i\\) with \\(a_i = a\\) for \\(1 \\leqslant i \\leqslant n\\); </p> <p>If \\(G\\) is a monoid, \\(a^0\\) is defined to be the identity element e;</p> <p>If \\(G\\) is a group, then for each \\(n \\in N^*\\), \\(a^{-n}\\) is defined to be \\((a^{-1})^n \\in G\\). </p> <p>Theorem 1.9. If \\(G\\) is a group (resp. semigroup. monoid) and \\(a \\in G\\), then for all \\(m, n \\in Z\\) (resp. \\(N^*, N\\)): </p> <p>(i) \\(a^m a^n = a^{m+n}\\) (additive notation: \\(ma + na = (m + n)a\\)); </p> <p>(ii) \\((a^m)^n = a^{mn}\\) (additive notation: \\(n(ma) = mna\\)). </p>"},{"location":"math/AbstractAlgebra/ChapterOne/#homomorphisms-and-subgroups","title":"Homomorphisms and Subgroups","text":"<p>Definition 2.1. Let \\(G\\) and \\(H\\) be semigroups. A function \\(f: G \\rightarrow H\\) is a homomorphism\uff08\u540c\u6001\uff09 provided</p> \\[ f(ab) = f(a)f(b) \\enspace for \\enspace all \\enspace a, b \\in G.   \\] <p>If \\(f\\) is injective as a map of sets, \\(f\\) is said to be a monomorphism\uff08\u5355\u6001\uff09. If \\(f\\) is surjective, \\(f\\) is called an epimorphism\uff08\u6ee1\u6001\uff09. If \\(f\\) is bijective, \\(f\\) is called an isomorphism\uff08\u540c\u6784\uff09. In this case \\(G\\) and \\(H\\) are said to be isomorphic (written \\(G \\cong H\\)). A homomorphism \\(f: G \\rightarrow G\\) is called an endomorphism\uff08\u81ea\u540c\u6001\uff09of \\(G\\) and an isomorphism \\(f: G \\rightarrow G\\) is called an automorphism\uff08\u81ea\u540c\u6784\uff09of \\(G\\).</p> <p>Definition 2.2. Let \\(f: G \\rightarrow H\\) be a homomorphism of groups. The kernel of \\(f\\) (denoted \\(\\mathrm{Ker} f\\)) is ${a \\in G \\enspace | \\enspace f(a) = e \\in H}. If \\(A\\) is a subset of \\(G\\), then \\(f(A) = \\{b \\in H \\enspace | \\enspace b = f(a) \\enspace for \\enspace some \\enspace a \\in A \\}\\) is the image of \\(A\\). \\(f(G)\\) is called the image of \\(f\\) and denoted \\(\\mathrm{Im} f\\). If \\(B\\) is a subset of \\(H\\), \\(f^{-1}(B) = \\{a \\in G \\enspace | \\enspace f(a) \\in B\\}\\) is the inverse image of \\(B\\).</p> <p>Theorem 2.3. Let \\(f: G \\rightarrow H\\) be a homomorphism of groups. Then</p> <p>(i) \\(f\\) is a monomorphism if and only if \\(\\mathrm{Ker} f = \\{e\\}\\);</p> <p>(ii) \\(f\\) is an isomorphism if and only if there is a homomorphism \\(f^{-1} : H \\rightarrow G\\) such that \\(ff^{-1} = 1_H\\) and \\(f^{-1}f = 1_G\\).</p> <p>Definition 2.4. Let \\(G\\) be a group and \\(H\\) a nonempty subset that is closed under the product in \\(G\\). If \\(H\\) is itself a group under the product in \\(G\\), then \\(H\\) is said to be a subgroup of \\(G\\). This is denoted by \\(H &lt; G\\).</p> <p>Proper Subgroup: A subgroup \\(H\\) such that \\(H \\neq G\\), \\(H \\neq \\langle e \\rangle\\).</p> <p>Theorem 2.5. Let \\(H\\) be a nonempty subset of a group \\(G\\). Then \\(H\\) is a subgroup of \\(G\\) if and only if \\(ab^{-1} \\in H\\) for all \\(a,b \\in H\\).</p> <p>Corollary 2.6. If \\(G\\) is a group and \\(\\{H_i \\enspace | \\enspace  i \\in I \\}\\) is a nonempty family of subgroups, then \\(\\cap_{i \\in I} H_i\\) is a subgroup of \\(G\\).</p> <p>Definition 2.7. Let \\(G\\) be a group and \\(X\\) a subset of \\(G\\). Let \\(\\{H_i \\enspace | \\enspace  i \\in I \\}\\) be the family of all subgroups of \\(G\\) which contain \\(X\\). Then \\(\\cap_{i \\in I} H_i\\) is called the subgroup of \\(G\\) generated by the set \\(X\\) and denoted \\(\\langle X \\rangle\\). </p> <p>\\(\\langle a \\rangle\\): Cyclic (sub)group generated by \\(a\\).</p> <p>Theorem 2.8. If \\(G\\) is a group and \\(X\\) is a nonempty subset of \\(G\\), then the subgroup \\(\\langle X \\rangle\\) generated by \\(X\\) consists of all finite products \\(a_1^{n_1}a_2^{n_2}\\cdots a_t^{n_t} (a_i \\in X; n_i \\in Z)\\). In particular for every \\(a \\in G\\), \\(\\langle a \\rangle = \\{a^n \\enspace | \\enspace n \\in Z\\}\\).</p> <p>\\(\\langle \\cap_{i \\in I} H_i \\rangle\\): The (sub)group generated by the groups \\(\\{H_i \\enspace | \\enspace i \\in I\\}\\).</p>"},{"location":"math/AbstractAlgebra/ChapterOne/#cyclic-groups","title":"Cyclic Groups","text":"<p>Theorem 3.1. Every subgroup \\(H\\) of the additive group \\(Z\\) is cyclic. Either \\(H = \\langle 0 \\rangle\\) or \\(H = \\langle m \\rangle\\), where \\(m\\) is the least positive integer in \\(H\\). If \\(H \\neq \\langle 0 \\rangle\\), then \\(H\\) is infinite.</p> <p>Theorem 3.2. Every infinite cyclic group is isomorphic to the additive group \\(Z\\) and every finite cyclic group of order \\(m\\) is isomorphic to the additive group \\(Z_m\\).</p> <p>Definition 3.3. Let \\(G\\) be a group and \\(a \\in G\\). The order of \\(a\\) is the order of the cyclic subgroup \\(\\langle a \\rangle\\) and is denoted \\(\\lvert a \\rvert\\).</p> <p>Theorem 3.4. Let \\(G\\) be a group and \\(a \\in G\\). If \\(a\\) has infinite order, then </p> <p>(i) \\(a^k = e\\) if and only if \\(k = 0\\);</p> <p>(ii) the elements \\(a^k (k \\in Z)\\) are all distinct. </p> <p>If \\(a\\) has finite order \\(m &gt; 0\\), then</p> <p>(iii) \\(m\\) is the least positive integer such that \\(a^m = e\\);</p> <p>(iv) \\(a^k = e\\) if and only if \\(m \\mid k\\);</p> <p>(v) \\(a^r = a^s\\) if and only if \\(r \\equiv s \\pmod m\\); </p> <p>(vi) \\(\\langle a \\rangle\\) consists of the distinct elements \\(a,a^2, \\ldots , a^{m - 1},a^m = e\\);</p> <p>(vii) for each \\(k\\) such that \\(k \\mid m\\), \\(\\lvert a^k \\rvert = m/k\\).</p> <p>Theorem 3.5. Every homomorphic image and every subgroup of a cyclic group \\(G\\) is cyclic. In particular, if \\(H\\) is a nontrivial subgroup of \\(G = \\langle a \\rangle\\) and \\(m\\) is the least positive integer such that \\(a^m \\in H\\), then \\(H = \\langle a^m \\rangle\\).</p> <p>Theorem 3.6. Let \\(G = \\langle a \\rangle\\) be a cyclic group. If \\(G\\) is infinite, then \\(a\\) and \\(a^{-1}\\) are the only generators of \\(G\\).If \\(G\\) is finite of order \\(m\\), then \\(a^k\\) is a generator of \\(G\\) if and only if \\((k,m) = 1\\).</p>"},{"location":"math/AbstractAlgebra/ChapterOne/#cosets-and-counting","title":"Cosets and Counting","text":"<p>Definition 4.1. Let \\(H\\) be a subgroup of a group \\(G\\) and \\(a,b \\in G\\). \\(a\\) is right congruent to \\(b\\) modulo \\(H\\), denoted \\(a \\equiv_r b \\pmod H\\) if \\(ab^{-1} \\in H\\). \\(a\\) is left congruent to \\(b\\) modulo \\(H\\), denoted \\(a \\equiv_l b \\pmod H\\) , if \\(a^{-1}b \\in H\\).</p> <p>Theorem 4.2. Let \\(H\\) be a subgroup of a group \\(G\\).</p> <p>(i) Right (resp. left) congruence modulo \\(H\\) is an equivalence relation on \\(G\\).</p> <p>(ii) The equivalence class of \\(a \\in G\\) under right (resp. left) congruence modulo \\(H\\) is the set \\(Ha = \\{ha \\enspace | \\enspace h \\in H\\}\\) (resp. \\(aH = \\{ah \\enspace | \\enspace h \\in H\\}\\)).</p> <p>(iii) \\(\\lvert Ha \\rvert\\) = \\(\\lvert H \\rvert\\) = \\(\\lvert aH \\rvert\\) for all \\(a \\in G\\).</p> <p>The set \\(Ha\\) is called a right coset of \\(H\\) in \\(G\\) and \\(aH\\) is called a left coset of \\(H\\) in \\(G\\).</p> <p>Corollary 4.3. Let \\(H\\) be a subgroup of a group \\(G\\).</p> <p>(i) \\(G\\) is the union of the right (resp. left) cosets of \\(H\\) in \\(G\\).</p> <p>(ii) Two right (resp. left) cosets of \\(H\\) in \\(G\\) are either disjoint or equal. </p> <p>(iii) For all \\(a,b \\in G\\), \\(Ha = Hb \\Leftrightarrow  ab^{-1} \\in H\\) and \\(aH = bH \\Leftrightarrow a^{-1}b \\in H\\).</p> <p>(iv) If \\(\\mathfrak{R}\\) is the set of distinct right cosets of \\(H\\) in \\(G\\) and \\(\\mathfrak{L}\\) is the set of distinct left  cosets of \\(H\\) in \\(G\\), then \\(\\lvert \\mathfrak{R} \\rvert = \\lvert \\mathfrak{L} \\rvert\\).</p> <p>Definition 4.4. Let \\(H\\) be a subgroup of a group \\(G\\). The index of \\(H\\) in \\(G\\), denoted \\([G:H]\\), is the cardinal number of the set of distinct right (resp.left) cosets of \\(H\\) in \\(G\\).</p> <p>Theorem 4.5. If \\(K,H,G\\) are groups with \\(K &lt; H &lt; G\\), then \\([G:K] = [G:H][H:K]\\). If any two of these indices are finite, then so is the third.</p> <p>Corollary 4.6. (Lagrange). If \\(H\\) is a subgroup of a group \\(G\\), then \\(\\lvert G \\rvert = [G:H]\\lvert H \\rvert\\). In particular if \\(G\\) is finite, the order \\(\\lvert a \\rvert\\) of \\(a \\in G\\) divides \\(\\lvert G \\rvert\\).</p> <p>Theorem 4.7. Let \\(H\\) and \\(K\\) be finite subgroups of a group \\(G\\). Then \\(\\lvert HK \\rvert = \\lvert H \\rvert \\lvert K \\rvert / \\lvert H \\cap K \\rvert\\).</p> <p>Proposition 4.8. If \\(H\\) and \\(K\\) are subgroups of a group \\(G\\), then \\([H:H \\cap K] \\leqslant [G:K]\\). If \\([G:K]\\) is finite, then \\([H:H \\cap K] = [G:K]\\) if and only if \\(G = KH\\).</p> <p>Proposition 4.9. Let \\(H\\) and \\(K\\) be subgroups of finite index of a group \\(G\\). Then \\([G:H \\cap K]\\) is finite and \\([G:H \\cap K] \\leqslant [G:H][G:K]\\). Furthermore, \\([G:H \\cap K] = [G:H][G:K]\\) if and only if \\(G = HK\\).</p>"},{"location":"math/AbstractAlgebra/ChapterOne/#normality-quotient-groups-and-homomorphisms","title":"Normality, Quotient Groups and Homomorphisms","text":"<p>Theorem 5.1. If \\(N\\) is a subgroup of a group \\(G\\), then the following conditions are eqUivalent.</p> <p>(i) Left and right congruence modulo \\(N\\) coincide (that is, define the same equivalence relation on \\(G\\));</p> <p>(ii) every left coset of \\(N\\) in \\(G\\) is a right coset of \\(N\\) in \\(G\\);</p> <p>(iii) \\(aN = Na\\) for all \\(a \\in G\\);</p> <p>(iv) for all \\(a \\in G\\), \\(aNa^{-1} \\in N\\), where \\(aNa^{-1} = \\{ana^{-1} \\enspace | \\enspace n \\in N\\}\\);</p> <p>(v) for all \\(a \\in G\\), \\(aNa^{-1} = N\\).</p> <p>Definition 5.2. A subgroup \\(N\\) of a group \\(G\\) which satisfies the equivalent conditions of Theorem 5.1 is said to be normal in \\(G\\) (or a normal subgroup of \\(G\\)); we write \\(N \\triangleleft G\\) if \\(N\\) is normal in \\(G\\).</p> <p>Theorem 5.3. Let \\(K\\) and \\(N\\) be subgroups of a group \\(G\\) with \\(N\\) normal in \\(G\\). Then</p> <p>(i) \\(N \\cap K\\) is a normal subgroup of \\(K\\); </p> <p>(ii) \\(N\\) is a normal subgroup of \\(N \\vee K\\); </p> <p>(iii) \\(NK = N \\vee K = KN\\);</p> <p>(iv) if \\(K\\) is normal in \\(G\\) and \\(K \\cap N = \\langle e \\rangle\\), then \\(nk = kn\\) for all \\(k \\in K\\) and \\(n \\in N\\).</p> <p>Theorem 5.4. (Quotient Group/Factor Group) If \\(N\\) is a normal subgroup of a group \\(G\\) and \\(G/N\\) is the set of all (left) cosets of \\(N\\) in \\(G\\), then \\(G/N\\) is a group of order \\([G:N]\\) under the binary operation given by \\((aN)(bN) = abN\\).</p> <p>Theorem 5.5. If \\(f: G \\rightarrow H\\) is a homomorphism of groups, then the kernel of \\(f\\) is a normal subgroup of \\(G\\). Conversely, if \\(N\\) is a normal subgroup of \\(G\\), then the map \\(\\pi : G \\rightarrow G/N\\) given by \\(\\pi (a) = aN\\) is an epimorphism with its kernel \\(N\\).\uff08\\(\\pi\\) \u79f0\u4e3a\u5178\u8303\u5546\u6620\u5c04\uff09</p> <p>Theorem 5.6. If \\(f: G \\rightarrow H\\) is a homomorphism of groups and \\(N\\) is a normal subgroup of \\(G\\) contained in the kernel of \\(f\\), then there is a unique homomorphism \\(\\overline{f}: G/N \\rightarrow H\\) such that \\(\\overline{f}(aN) = f(a)\\) for all \\(a \\in G\\). \\(\\mathrm{Im} f = \\mathrm{Im} \\overline{f}\\) and \\(\\mathrm{Ker} \\overline{f} = (\\mathrm{Ker} f)/N\\). \\(\\overline{f}\\) is an isomorphism if and only if \\(f\\) is an epimorphism and \\(N = \\mathrm{Ker} f\\).</p> <p>Corollary 5.7. (First Isomorphism Theorem) If \\(f: G \\rightarrow H\\) is a homomorphism of groups, then \\(f\\) induces an isomorphism \\(G/ \\mathrm{Ker} f \\cong \\mathrm{Im} f\\).</p> <p>Corollary 5.8. If \\(f: G \\rightarrow H\\) is a homomorphism of groups, \\(N \\triangleleft G\\), \\(M \\triangleleft H\\), and \\(f(N) &lt; M\\), then \\(f\\) induces a homomorphism \\(\\overline{f}: G/N \\rightarrow H/M\\), given by \\(aN \\mapsto f(a)M\\). \\(\\overline{f}\\) is an isomorphism if and only if \\(\\mathrm{Im} f \\vee M = H\\) and \\(f^{-1}(M) \\subset N\\). In particular if \\(f\\) is an epimorphism such that \\(f(N) = M\\) and \\(\\mathrm{Ker} f \\subset N\\), then \\(\\overline{f}\\) is an isomorphism. </p> <p>Corollary 5.9. (Second Isomorphism Theorem) If \\(K\\) and \\(N\\) are subgroups of a group \\(G\\), with \\(N\\) normal in \\(G\\), then \\(K/(N \\cap K) \\cong NK/N\\).</p> <p>Corollary 5.10. (Third Isomorphism Theorem). If \\(H\\) and \\(K\\) are normal subgroups of a group \\(G\\) such that \\(K &lt; H\\), then \\(H/K\\) is a normal subgroup of \\(G/K\\) and \\((G/K)/(H/K) \\cong G/H\\).</p> <p>Theorem 5.11. If \\(f: G \\rightarrow H\\) is an epimorphism of groups, then the assignment \\(K \\mapsto f(K)\\) defines a one-to-one correspondence between the set \\(S_f(G)\\) of all subgroups \\(K\\) of \\(G\\) which contain \\(\\mathrm{Ker} f\\) and the set \\(S(H)\\) of all subgroups of \\(H\\). Under this correspondence normal subgroups correspond to normal subgroups.</p> <p>Corollary 5.12. If \\(N\\) is a normal subgroup of a group \\(G\\), then every subgroup of \\(G/N\\) is of the form \\(K/N\\), where \\(K\\) is a subgroup of \\(G\\) that contains \\(N\\). Furthermore, \\(K/N\\) is normal in \\(G/N\\) if and only if \\(K\\) is normal in \\(G\\).</p>"},{"location":"math/AbstractAlgebra/ChapterOne/#symmetric-alternating-and-dihedral-groups","title":"Symmetric, Alternating and Dihedral Groups","text":"<p>Definition 6.1. Let \\(i_1,i_2, \\ldots , i_r, (r \\leqslant n)\\) be distinct elements of \\(I_n = \\{1,2, \\ldots, n\\}\\). Then \\((i_1i_2\\cdots i_r)\\) denotes the permutation that maps it \\(i_1 \\mapsto i_2, i_2 \\mapsto i_3, i_3 \\mapsto i_4 , \\ldots , i_{r - 1} \\mapsto i_r\\) and \\(i_r \\mapsto i_1\\) and maps every other element of \\(I_n\\) onto itself. \\((i_1i_2\\cdots i_r)\\) is called a cycle of length \\(r\\) or an \\(r\\)-cycle; a 2-cycle is called a transposition. </p> <p>Definition 6.2. The permutations \\(\\sigma_1, \\sigma_2, \\ldots , \\sigma_r\\) of \\(S_n\\) are said to be disjoint provided that for each \\(1 \\leqslant i \\leqslant r\\), and every \\(k \\in I_n\\), \\(\\sigma_i(k) \\neq k\\) implies \\(\\sigma_j(k) = k\\) for all \\(j \\neq i\\).</p> <p>It is easy to see that \\(\\tau \\sigma = \\sigma \\tau\\) whenever $\\sigma $ and $\\tau $ are disjoint.</p> <p>Theorem 6.3. Every nonidentity permutation in \\(S_n\\) is uniquely (up to the order of the factors) a product of disjoint cycles, each of which has length at least 2.</p> <p>Corollary 6.4. The order of a permutation \\(\\sigma \\in S_n\\) is the least common multiple of the orders of its disjoint cycles. </p>"},{"location":"math/AbstractAlgebra/Lec1/","title":"1 \u57fa\u672c\u5b9a\u4e49 \u5faa\u73af\u7fa4","text":"<p>\u7fa4\u662f\u62bd\u8c61\u4ee3\u6570\u4e2d\u7814\u7a76\u7684\u7b2c\u4e00\u4e2a\u4ee3\u6570\u7ed3\u6784\uff0c\u4e5f\u662f\u7814\u7a76\u6700\u6df1\u5165\u7684\u4e00\u4e2a\u3002</p> <p>\u5b9a\u4e49</p> <p>\u79f0\u4e00\u5177\u5907\u4e8c\u5143\u8fd0\u7b97\u7684\u975e\u7a7a\u96c6\u5408 \\(G\\) \u4e3a\u4e00\u534a\u7fa4(Semigroup)\uff0c\u82e5\u5176\u6ee1\u8db3\uff1a</p> <ol> <li>\u7ed3\u5408(associative)\uff1a\\(\\forall a,b,c \\in G, (ab)c = a(bc)\\); </li> </ol> <p>\u79f0\u4e00\u534a\u7fa4\u4e3a\u5e7a\u534a\u7fa4(Monoid)\uff0c\u82e5\u5176\u6ee1\u8db3\uff1a</p> <ol> <li>\u5e7a\u5143(identity element)\uff1a\\(\\exists e \\in G, \\forall a \\in G, ea = ae = a\\);</li> </ol> <p>\u79f0\u4e00\u5e7a\u534a\u7fa4\u4e3a\u7fa4(Group)\uff0c\u82e5\u5176\u6ee1\u8db3\uff1a</p> <ol> <li>\u9006\u5143(inverse element)\uff1a\\(\\forall a \\in G, \\exists b \\in G, ab = ba = e\\)\uff0c\u5c06 \\(b\\) \u8bb0\u4f5c \\(a^{-1}\\)\uff0c\u5e76\u79f0\u4e3a \\(a\\) \u7684\u9006.</li> </ol> <p>\u79f0\u4ee5\u4e0a\u4efb\u4f55\u4e00\u4e2a\u7ed3\u6784\u79f0\u4e3a\u4ea4\u6362\u7684(Abelian/Commutative)\uff0c\u82e5\u5176\u6ee1\u8db3\uff1a</p> <ol> <li>\u4ea4\u6362(commutative)\uff1a\\(\\forall a, b \\in G, ab = ba\\).</li> </ol> <p>\u4ee5\u4e0b\u662f\u4ea4\u6362\u5f8b\u548c\u7ed3\u5408\u5f8b\u7684\u63a8\u5e7f\u3002\uff08\u8fd9\u4e00\u6bb5\u91c7\u7528\u82f1\u6587\uff09</p> <p>\u5b9a\u4e49</p> <p>Meaningful Product of \\(a_1, \\ldots, a_n\\): If \\(n = 1\\), the only meaningful product is \\(a_1\\); else a meaningful product is defined to be any product of the form \\((a_1\\ldots a_m)(a_{m + 1}\\ldots a_n)\\) where \\(m &lt; n\\) and \\((a_1\\ldots a_m)\\) and \\((a_{m + 1}\\ldots a_n)\\) are meaningful products of \\(m\\) and \\(n - m\\) elements respectively. </p> <p>Standard n product \\(\\prod_{i = 1}^n a_i\\) of \\(a_1, \\ldots, a_n\\):</p> \\[ \\prod_{i = 1}^1 a_i = a_1; \\enspace and \\enspace for \\enspace n &gt; 1, \\prod_{i = 1}^n a_i = \\left(\\prod_{i = 1}^{n - 1} a_i\\right)a_n. \\] <p>\u5b9a\u7406</p> <p>If \\(G\\) is a semigroup and \\(a_1, a_2, \\ldots , a_n \\in G\\), then </p> <p>Generalized Associative Law: Any two meaningful products of \\(a_1, a_2, \\ldots , a_n \\in G\\) in this order are equal.</p> <p>If \\(G\\) is also commutative, then</p> <p>Generalized Commutative Law: For any permutation \\(i_1, \\ldots, i_n\\) of \\(1, \\ldots, n\\), \\(a_1a_2\\cdots a_n = a_{i_1}a_{i_2}\\cdots a_{i_n}\\).</p> <p>\u7531\u6b64\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u5e42</p> <p>\u5b9a\u4e49</p> <p>\u8bbe \\(G\\) \u4e3a\u4e00\u534a\u7fa4\uff0c\\(a \\in G\\) \u4e14 \\(n \\in N^*\\). \u5219 \\(a^n \\in G\\) \u5b9a\u4e49\u4e3a </p> \\[ a^n := \\prod_{i = 1}^n a_i, a_i = a, 1 \\leqslant i \\leqslant n. \\] <p>\u82e5\u534a\u7fa4 \\(G\\) \u662f\u4e00\u5e7a\u534a\u7fa4\uff0c\u5219 \\(a^0 := e\\).</p> <p>\u82e5\u5e7a\u534a\u7fa4 \\(G\\) \u662f\u4e00\u7fa4\uff0c\u90a3\u4e48 \\(\\forall n \\in N^*\\), \\(a^{-n} := (a^{-1})^n\\).</p> <p>\u5bf9\u5e94\u7684\u8fd0\u7b97\u3002</p> <p>\u5f15\u7406</p> <p>\u8bbe \\(G\\) \u662f\u4e00\u7fa4/\u5e7a\u534a\u7fa4/\u534a\u7fa4\uff0c\\(a \\in G\\)\uff0c\u90a3\u4e48 \\(\\forall m, n \\in Z/N/N^*\\):</p> <ol> <li> <p>\\(a^ma^n = a^{m + n}\\);</p> </li> <li> <p>\\((a^m)^n = a^{mn}\\).</p> </li> </ol> <p>\u4ee5\u4e0b\u4e3a\u7fa4\u7684\u4e00\u4e9b\u57fa\u672c\u6027\u8d28\u3002</p> <p>\u5f15\u7406</p> <ol> <li> <p>\u82e5 \\(G\\) \u662f\u4e00\uff08\u5e7a\u534a\uff09\u7fa4\uff0c\u5219\u5176\u5e7a\u5143 \\(e\\) \u552f\u4e00. </p> </li> <li> <p>\u82e5 \\(G\\) \u662f\u4e00\u7fa4\uff0c\u5219 </p> <p>i. \u7fa4\u4e2d\u5e42\u7b49\u7684\u5143\u7d20\u53ea\u6709\u5e7a\u5143\uff1a\\(c \\in G\\) and \\(c^2 = c \\Rightarrow c = e\\); </p> <p>ii. \u5de6\u53f3\u6d88\u53bb\u5f8b(left and right cancellation)\uff1a\\(\\forall a, b, c \\in G, ab = ac \\Rightarrow b = c\\) and \\(ba = ca \\Rightarrow b = c\\);</p> <p>iii. \\(\\forall a, b \\in G\\)\uff0c\u65b9\u7a0b \\(ax = b\\) \u548c \\(ya = b\\) \u6709\u552f\u4e00\u89e3 \\(x = a^{-1}b\\) \u548c \\(y = ba^{-1}\\);</p> <p>iv. \\(\\forall a \\in G, (a^{-1})^{-1} = a\\);</p> <p>v. \\(\\forall a, b \\in G, (ab)^{-1} = b^{-1}a^{-1}\\);</p> <p>vi. \u7fa4\u4e2d\u4efb\u4e00\u5143\u7d20\u7684\u9006\u5143\u552f\u4e00.  </p> </li> </ol> <p>\u534a\u7fa4\u57fa\u7840\u4e0a\u7684\u7fa4\u7b49\u4ef7\u5b9a\u4e49\u3002</p> <p>\u5b9a\u7406</p> <p>\u8bbe \\(G\\) \u4e3a\u4e00\u534a\u7fa4\uff0c\u5219\u4ee5\u4e0b\u6761\u4ef6\u7b49\u4ef7\uff1a</p> <ol> <li> <p>\\(G\\) \u662f\u4e00\u7fa4.</p> </li> <li> <p>\u5355\u8fb9\u5b9a\u4e49\uff1a</p> <p>i. \\(\\forall a \\in G, \\exists e \\in G, s.t. \\enspace ea = a\\);</p> <p>ii. \\(\\forall a \\in G, \\exists b \\in G, s.t. \\enspace ba = e\\).</p> </li> <li> <p>\u65b9\u7a0b\u5b9a\u4e49\uff1a\\(\\forall a, b \\in G\\)\uff0c\u65b9\u7a0b \\(ax = b\\) \u548c \\(ya = b\\) \u5747\u5728 \\(G\\) \u4e2d\u6709\u89e3.</p> </li> </ol> <p>\u4ee5\u4e0b\u662f\u5b50\u7fa4\u7684\u5b9a\u4e49\u3002</p> <p>\u5b9a\u4e49</p> <p>\u8bbe \\(G\\) \u662f\u4e00\u7fa4\uff0c\\(H\\) \u662f\u5176\u4e00\u975e\u7a7a\u5b50\u96c6\uff0c\u5e76\u4e14\u5728\u5b9a\u4e49\u5728 \\(G\\) \u4e0a\u7684\u4e8c\u5143\u8fd0\u7b97\u4e0b\u5c01\u95ed(Closed). \u82e5 \\(H\\) \u4e0e\u6b64\u4e8c\u5143\u8fd0\u7b97\u6ee1\u8db3\u7fa4\u7684\u6761\u4ef6\uff0c\u5219\u79f0 \\(H\\) \u662f \\(G\\) \u7684\u4e00\u4e2a\u5b50\u7fa4(Subgroup)\uff0c\u8bb0\u4f5c \\(H &lt; G\\). </p> <p>\\(G\\) \u4e0e \\(\\langle e \\rangle\\) \u88ab\u79f0\u4f5c\u7fa4 \\(G\\) \u7684\u5e73\u51e1\u5b50\u7fa4(Trivial Subgroup)\uff0c\u9664\u6b64\u4e4b\u5916\u7684 \\(G\\) \u7684\u5b50\u7fa4\u88ab\u79f0\u4f5c\u975e\u5e73\u51e1\u5b50\u7fa4(Proper Subgroup). </p> <p>\u5b50\u7fa4\u7684\u7b49\u4ef7\u6761\u4ef6\u3002</p> <p>\u5b9a\u7406</p> <p>\u8bbe \\(H\\) \u662f\u7fa4 \\(G\\) \u7684\u4e00\u4e2a\u975e\u7a7a\u5b50\u96c6\uff0c\u90a3\u4e48 \\(H\\) \u662f \\(G\\) \u7684\u5b50\u7fa4\u7b49\u4ef7\u4e8e \\(\\forall a, b \\in G, ab^{-1} \\in H\\).</p> \u8bc1\u660e <p>\\((\\Leftarrow)\\) \\(\\exists a \\in H\\) \u4fbf\u6709 \\(e = aa^{-1} \\in H\\)\uff0c\u8fdb\u800c \\(\\forall b \\in H, b^{-1} = eb^{-1} \\in H\\)\uff0c\u6240\u4ee5 \\(ab = a(b^{-1})^{-1} \\in H\\).</p> <p>\\((\\Rightarrow)\\) \u662f\u5e73\u51e1\u7684.</p> <p>\u4e0b\u9762\u662f\u4e2a\u627f\u4e0a\u542f\u4e0b\u7684\u5f15\u7406\u3002</p> <p>\u5f15\u7406</p> <p>\u8bbe \\(G\\) \u662f\u4e00\u7fa4\uff0c \\(\\{H_i | i \\in I\\}\\) \u662f\u4e00\u65cf \\(G\\) \u7684\u5b50\u7fa4\uff0c\u5219 \\(\\cap_{i \\in I} H_i\\) \u662f \\(G\\) \u7684\u4e00\u4e2a\u5b50\u7fa4. </p> <p>\u5b83\u786e\u4fdd\u4e86\u751f\u6210\u5b50\u7fa4\u7684\u826f\u5b9a\u4e49\u3002</p> <p>\u5b9a\u4e49</p> <p>\u8bbe \\(G\\) \u662f\u4e00\u7fa4\uff0c\\(X\\) \u662f \\(G\\) \u4e00\u5b50\u96c6\uff0c\\(\\{H_i | i \\in I\\}\\) \u662f \\(G\\) \u6240\u6709\u5305\u542b \\(X\\) \u7684\u5b50\u7fa4\u6784\u6210\u7684\u96c6\u5408. \u4ece\u800c \\(\\cap_{i \\in I} H_i\\) \u4fbf\u5b9a\u4e49\u4e3a\u7531\u96c6\u5408 \\(X\\) \u751f\u6210\u7684\u5b50\u7fa4\uff0c\u8bb0\u4f5c \\(\\langle X \\rangle\\)\uff0c\u5176\u662f\u5305\u542b\u96c6\u5408 \\(X\\) \u7684\u6700\u5c0f\u5b50\u7fa4. \u96c6\u5408 \\(X\\) \u4e2d\u7684\u5143\u7d20\u88ab\u79f0\u4e3a\u5b50\u7fa4 \\(\\langle X \\rangle\\) \u7684\u751f\u6210\u5143(Geneator). \u82e5 \\(X\\) \u662f\u6709\u9650\u96c6\uff0c\u5219\u79f0 \\(\\langle X \\rangle\\) \u662f\u6709\u9650\u751f\u6210\u7684(Finitely Generated). \u7279\u522b\u5730\uff0c\u5982\u679c \\(X\\) \u662f\u5355\u5143\u7d20\u96c6\uff0c\u5373 \\(X = \\{a\\}\\)\uff0c\u7531 \\(a\\) \u751f\u6210\u7684\u5b50\u7fa4 \\(\\langle a \\rangle\\) \u88ab\u79f0\u4e3a\u5faa\u73af\u5b50\u7fa4(Cyclic Subgroup). </p> <p>\u5176\u7ed3\u6784\u53ef\u4ee5\u8fd9\u6837\u63cf\u8ff0\u3002</p> <p>\u5b9a\u7406</p> <p>\u8bbe \\(G\\) \u662f\u4e00\u7fa4\uff0c\\(X\\) \u662f\u5176\u4e00\u975e\u7a7a\u5b50\u96c6\uff0c\u5219\u7531 \\(X\\) \u751f\u6210\u7684\u5b50\u7fa4 \\(\\langle X \\rangle\\) \u662f\u7531\u6240\u6709\u6709\u9650\u4e58\u79ef \\(a_1^{n_1}a_2^{n_2}\\cdots a_t^{n_t} (a_i \\in X; n_i \\in Z)\\) \u7ec4\u6210. \u5bf9\u5faa\u73af\u7fa4\u800c\u8a00\uff0c\\(\\forall a \\in G, \\langle a \\rangle = \\{a^n | n \\in Z\\}\\)</p> \u8bc1\u660e <p>\u8bbe \\(H = \\{a_1^{n_1}a_2^{n_2}\\cdots a_t^{n_t} | a_i \\in X, n_i \\in Z\\}\\). \u9996\u5148 \\(H &lt; G\\)\uff0c\u7136\u540e \\(\\forall a \\in H, a \\in H_i, i \\in I\\)\uff0c\u6240\u4ee5 \\(a \\in \\cap_{i \\in I} H_i = \\langle X \\rangle\\)\uff0c\u6709 \\(H &lt; \\langle X \\rangle\\). \u800c\u663e\u7136 \\(X \\subset H, \\exists i_0 \\in I, s.t. H_{i_0} = H\\)\uff0c\u53c8 \\(\\langle X \\rangle = \\cap_{i \\in I} H_i\\)\uff0c\u6240\u4ee5 \\(\\langle X \\rangle &lt; H\\). \u7efc\u4e0a \\(\\langle X \\rangle = H = \\{a_1^{n_1}a_2^{n_2}\\cdots a_t^{n_t} | a_i \\in X, n_i \\in Z\\}\\). \u7531\u6b64\uff0c\u5faa\u73af\u7fa4\u7684\u7ed3\u8bba\u4fbf\u663e\u7136\u4e86. </p> <p>\u4e0a\u9762\u63a2\u7a76\u4e86\u4e00\u65cf\u5b50\u7fa4\u7684\u4ea4\u6784\u6210\u7684\u5b50\u7fa4\uff0c\u4e0b\u9762\u8f6e\u5230\u4e00\u65cf\u5b50\u7fa4\u7684\u5e76\uff0c\u4f46\u5176\u5e76\u4e0d\u80fd\u6784\u6210\u5b50\u7fa4\uff0c\u4f46\u6211\u4eec\u53ef\u4ee5\u4ece\u4e00\u65cf\u5b50\u7fa4\u7684\u5e76\u751f\u6210\u4e00\u5b50\u7fa4\u3002\u8bbe\u4e00\u65cf\u5b50\u7fa4 \\(\\{H_i | i \\in I\\}\\)\uff0c\u751f\u6210\u7684\u5b50\u7fa4 \\(\\langle \\cup_{i \\in I} H_i \\rangle\\) \u88ab\u79f0\u4e3a\u7531\u4e00\u65cf\u7fa4 \\(\\{H_i | i \\in I\\}\\) \u751f\u6210\u7684\u5b50\u7fa4(Subgroup Generated by the Groups \\(\\{H_i | i \\in I\\}\\))\u3002\u7279\u522b\u5730\uff0c\u82e5\u53ea\u6709\u4e24\u4e2a\u5b50\u7fa4 \\(H\\) \u548c \\(K\\) \u4f5c\u5e76\u751f\u6210\uff0c\u5219\u88ab\u79f0\u4e3a\u4e8c\u8005\u7684\u8054\u5408(join)\uff0c\u8bb0\u4f5c \\(H \\vee K\\)\u3002</p> <p>\u4ece\u7fa4\u751f\u6210\u65b0\u7684\u7fa4\u8fd8\u6709\u5982\u4e0b\u7684\u65b9\u6cd5\u3002</p> <p>\u5b9a\u4e49</p> <p>\u8bbe \\(G\\) \u548c \\(H\\) \u662f\u7fa4\uff0c\u5e7a\u5143\u5206\u522b\u4e3a \\(e_G, e_H\\). \\(G\\) \u548c \\(H\\) \u7684\u76f4\u79ef(Direct Product)\u5b9a\u4e49\u4e3a\u4ee5 \\(G \\times H\\) \u4e3a\u652f\u96c6\uff0c\u5177\u5907\u4ee5\u4e0b\u4e8c\u5143\u8fd0\u7b97\u7684\u7fa4.</p> \\[ (a_1, b_1)(a_2, b_2) = (a_1a_2, b_1b_2), \\enspace a_1, a_2 \\in G; b_1, b_2 \\in H. \\] <p>\u4e0b\u9762\u662f\u5173\u4e8e\u7b49\u4ef7\u5173\u7cfb\u8fdb\u4e00\u6b65\u7684\u63cf\u8ff0\u3002</p> <p>\u5b9a\u7406</p> <p>\u8bbe \\(\\mathbf{R}\\)(~) \u662f\u5e7a\u534a\u7fa4 \\(G\\) \u4e0a\u7684\u4e00\u4e2a\u7b49\u4ef7\u5173\u7cfb\uff0c\u6ee1\u8db3 \\(\\forall a_i, b_i \\in G, a_1\\) ~ \\(a_2\\) \u548c \\(b_1\\) ~ \\(b_2\\) \u6709 \\(a_1b_1\\) ~ \\(a_2b_2\\). \u90a3\u4e48 \\(G\\) \u5728 \\(R\\) \u4e0b\u7684\u6240\u6709\u7b49\u4ef7\u7c7b\u7ec4\u6210\u7684\u96c6\u5408 \\(G/R\\) \u4e0e\u4e8c\u5143\u8fd0\u7b97 \\((\\overline{a})(\\overline{b}) = \\overline{ab}\\) \u6784\u6210\u4e00\u4e2a\u5e7a\u534a\u7fa4. \u5982\u679c \\(G\\) \u662f\u4e00\u4e2a\u7fa4\uff0c\u90a3\u4e48 \\(G/R\\) \u4e5f\u662f\u7fa4\uff1b\u5982\u679c \\(G\\) \u53ef\u4ea4\u6362\uff0c\u90a3\u4e48 \\(G/R\\) \u53ef\u4ea4\u6362. \u6ee1\u8db3\u6b64\u5b9a\u7406\u7684\u7b49\u4ef7\u5173\u7cfb\u4e5f\u88ab\u79f0\u4e3a\u540c\u4f59\u5173\u7cfb(Congruence Relation).</p> <p>\u793a\u4f8b</p> <ol> <li> <p>\u5728\u6574\u6570\u52a0\u6cd5\u7fa4 \\(Z\\) \u4e0a\u5b9a\u4e49\u6a21 \\(m\\) (module \\(m\\)) \u5173\u7cfb\u5f97\u5230\u7684\u7fa4 \\(Z_m = \\{\\overline{0}, \\overline{1}, \\ldots, \\overline{m - 1}\\}\\)(The (additive) group of integers modulo \\(m\\)).</p> </li> <li> <p>\u5bf9\u6709\u7406\u6570\u52a0\u6cd5\u7fa4 \\(Q\\) \u4e0a\u5b9a\u4e49 \\(a\\) ~ \\(b  \\Leftrightarrow a - b \\in Z\\) \u5f97\u5230\u7684\u7fa4 \\(Q/Z\\)(the group of rationals modulo one). </p> </li> </ol> <p>\u5148\u4ecb\u7ecd\u6574\u6570\u52a0\u6cd5\u7fa4\u5b50\u7fa4\u7684\u6027\u8d28\u3002</p> <p>\u5b9a\u7406</p> <p>\u6574\u6570\u52a0\u6cd5\u7fa4 \\(Z\\) \u7684\u4efb\u4e00\u5b50\u7fa4 \\(H\\) \u90fd\u662f\u5faa\u73af\u7684\uff0c\u4e14 \\(H = \\langle 0 \\rangle\\) \u6216 \\(H = \\langle m \\rangle\\)\uff0c\\(m\\) \u662f \\(H\\) \u4e2d\u7684\u6700\u5c0f\u6b63\u6574\u6570. \u82e5 \\(H \\neq \\langle 0 \\rangle\\)\uff0c\u5219 \\(H\\) \u662f\u65e0\u9650\u7fa4. </p> \u8bc1\u660e <p>\u82e5 \\(H = \\langle 0 \\rangle\\)\uff0c\u5219\u5df2\u8bc1. </p> <p>\u82e5 \\(H\\) \u4e2d\u7684\u6700\u5c0f\u6b63\u6574\u6570\u4e3a \\(m\\)\uff0c\u5219\u5fc5\u6709 \\(\\langle m \\rangle = \\{km | k \\in Z\\} \\subset H\\). \u800c\u82e5 \\(h \\in H\\)\uff0c\u5219\u7531\u5e26\u4f59\u9664\u6cd5\u6709 \\(h = qm + r, q, r \\in Z, 0 \\leqslant r &lt; m\\). \u8fdb\u800c\u6709 \\(r = h - qm \\in H\\)\uff0c\u6240\u4ee5\u5fc5\u6709 \\(r = 0, h = qm\\)\uff0c\u5426\u5219\u4e0e \\(m\\) \u662f \\(H\\) \u4e2d\u6700\u5c0f\u6b63\u6574\u6570\u77db\u76fe. \u6545 \\(H \\subset \\langle m \\rangle\\)\uff0c\u5373 \\(H = \\langle m \\rangle\\). </p> <p>\u63a5\u4e0b\u6765\u662f\u9636(order)\u7684\u5b9a\u4e49\u548c\u5b9a\u7406\u3002</p> <p>\u5b9a\u4e49</p> <ol> <li> <p>\u7fa4\u7684\u9636\uff1a\u8bbe \\(G\\) \u662f\u4e00\u7fa4\uff0c\u5219\u5176\u9636\u7b49\u540c\u4e8e\u5176\u57fa\u6570\uff0c\u8bb0\u4f5c \\(\\lvert G \\rvert\\). </p> </li> <li> <p>\u5143\u7d20\u7684\u9636\uff1a\u8bbe \\(G\\) \u662f\u4e00\u7fa4\uff0c\\(a \\in G\\)\uff0c\\(a\\) \u7684\u9636\u5c31\u662f\u5faa\u73af\u5b50\u7fa4 \\(\\langle a \\rangle\\) \u7684\u9636\uff0c\u8bb0\u4f5c \\(\\lvert a \\rvert\\).</p> </li> </ol> <p>\u5f15\u7406</p> <p>\u8bbe \\(G\\) \u662f\u4e00\u7fa4\u4e14 \\(a \\in G\\). </p> <ol> <li> <p>\\(\\lvert a \\rvert\\) \u65e0\u9650\uff1a</p> <p>i. \\(a^k = e \\Leftrightarrow k = 0\\);</p> <p>ii. \\(a^k, k \\in Z\\) \u662f\u4e92\u5f02\u7684. </p> </li> <li> <p>\\(\\lvert a \\rvert = m &gt; 0\\):</p> <p>i. \\(m\\) \u662f\u6ee1\u8db3 \\(a^m = e\\) \u7684\u6700\u5c0f\u6b63\u6574\u6570\uff1b</p> <p>ii. \\(a^k = e \\Leftrightarrow m \\mid k\\);</p> <p>iii. \\(a^r = a^s \\Leftrightarrow r \\equiv s \\pmod m\\);   </p> <p>iv. \\(\\langle a \\rangle = \\{a, a^2, \\ldots, a^{m -1}, a^m\\}\\) \u4e14\u6240\u6709\u5143\u7d20\u4e92\u5f02\uff1b</p> <p>v. \u5bf9\u4e8e\u4efb\u4e00 \\(k\\) \u6ee1\u8db3 \\(k \\mid m, \\langle a^k \\rangle = m/k\\).</p> </li> </ol> <p>\u4ee5\u4e0b\u662f\u5173\u4e8e\u5faa\u73af\u7fa4\u751f\u6210\u5143\u7684\u5b9a\u7406\u3002</p> <p>\u5b9a\u7406</p> <p>\u8bbe \\(G = \\langle a \\rangle\\) \u662f\u4e00\u4e2a\u5faa\u73af\u7fa4. \u82e5 \\(G\\) \u662f\u4e00\u4e2a\u65e0\u9650\u7fa4\uff0c\u90a3\u4e48 \\(G\\) \u4ec5\u6709\u7684\u751f\u6210\u5143\u4fbf\u662f \\(a\\) \u548c \\(a^{-1}\\). \u82e5 \\(G\\) \u662f\u6709\u9650\u7fa4\u4e14\u9636\u4e3a \\(m\\)\uff0c\u90a3\u4e48 \\(a^k\\) \u662f \\(G\\) \u7684\u751f\u6210\u5143\u7b49\u4ef7\u4e8e \\((k, m) = 1\\). </p> \u8bc1\u660e <p>\u4ec5\u8bc1\u660e\u6709\u9650\u7fa4.</p> <p>\u82e5 \\((k, m) = 1\\)\uff0c\u7531\u88f4\u8700\u5b9a\u7406(B\u00e9zout's lemma)\uff0c\\(\\exists c, d \\in Z, s.t. ck + dm = 1\\)\uff0c\u4ece\u800c\u6709 \\((a^k)^c = a^{ck} = a^{1- dm} = a/ a^{dm} = a/(a^m)^d = a/e^d = a\\)\uff0c\u8fdb\u800c \\((a^k)^{cm} = ((a^k)^c)^m = a^m = e\\)\uff0c\\(a^k\\) \u662f \\(G\\) \u7684\u751f\u6210\u5143. </p> <p>\u82e5 \\((k, m) = r &gt; 1\\)\uff0c\u5219\u8bbe \\(n = m/r &lt; m, (a^k)^n = a^{km/r} = (a^m)^{k/r} = e^{k/r} = e\\). \u6545 \\(a^k\\) \u4e0d\u662f \\(G\\) \u7684\u751f\u6210\u5143. </p>"},{"location":"math/AbstractAlgebra/introduction/","title":"Introduction","text":""},{"location":"math/AbstractAlgebra/introduction/#sets-and-classes","title":"Sets and Classes","text":"<p>\u7b80\u5355\u4ecb\u7ecd\u4e86\u4e00\u70b9\u6700\u57fa\u7840\u7684\u96c6\u5408\u8bba\uff0c\u91c7\u7528\u7684\u4f53\u7cfb\u662f NBG \u516c\u7406\u3002</p> <p>\u4f9d\u9760\u516c\u7406\u6027\u57fa\u672c\u6982\u5ff5\uff08primitive notions\uff09\uff0c\u5373 class, membership, equality \u548c\u4e00\u9636\u8c13\u8bcd\u6f14\u7b97\uff08the first-order predicate calculus\uff09\u52a0\u4ee5\u63cf\u8ff0\u3002</p> <p>\u5916\u5ef6\u516c\u7406\uff08the axiom of extensionality\uff09\u548c\u7c7b\u6784\u9020\u516c\u7406\uff08the axiom of class formation\uff09\u3002</p> <p>\u96c6\u5408\uff08set\uff09\uff1aA class \\(A\\) is defined to be a set if and only if there exists a class \\(B\\) such that \\(A \\in B\\). </p> <p>Proper class: A class that is not a set.</p>"}]}